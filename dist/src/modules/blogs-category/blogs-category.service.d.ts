import { Prisma } from '@prisma/client';
import { SEOData } from 'src/common-types/common-types';
import { BlogsCategoryStatus } from 'src/config/constants';
import { PrismaService } from 'src/prisma.service';
import { BlogsCategoryFiltersDto, BlogsCategoryPublicFiltersDto } from './dto/blogs-category-filter.dto';
import { BlogsCategoryPaginationDto } from './dto/blogs-category-pagination.dto';
import { BlogsCategorySortingDto } from './dto/blogs-category-sorting.dto';
import { CreateBlogCategoryDto } from './dto/create-category-blog.dto';
import { UpdateBlogCategoryDto } from './dto/update-category-blog.dto';
export declare class BlogsCategoryService {
    private prisma;
    private readonly logger;
    constructor(prisma: PrismaService);
    create(createBlogCategoryDto: CreateBlogCategoryDto): Promise<{
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }>;
    findAll(filters: Prisma.BlogsCategoryWhereInput, pagination: BlogsCategoryPaginationDto, sorting: BlogsCategorySortingDto): Prisma.PrismaPromise<{
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }[]>;
    findAllPublished(filters: Prisma.BlogsCategoryWhereInput, pagination: BlogsCategoryPaginationDto, sorting: BlogsCategorySortingDto): Prisma.PrismaPromise<{
        addedDate: Date;
        title: string;
        slug: string;
        image: string;
        imageAlt: string;
        highlight: string;
    }[]>;
    findOne(id: number): Promise<{
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }>;
    findOneBySlug(slug: string, pagination: BlogsCategoryPaginationDto): Promise<{
        blogs: {
            addedDate: Date;
            title: string;
            slug: string;
            image: string;
            imageAlt: string;
            highlight: string;
        }[];
    } & {
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }>;
    update(id: number, updateBlogCategoryDto: UpdateBlogCategoryDto): Promise<{
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }>;
    updateStatus(blogId: number, status: BlogsCategoryStatus): Prisma.Prisma__BlogsCategoryClient<{
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
    remove(id: number, userId: number): Promise<{
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }>;
    applyAdminFilters(filters: BlogsCategoryFiltersDto): Prisma.BlogsCategoryWhereInput;
    applyPublicFilters(filters: BlogsCategoryPublicFiltersDto): Prisma.BlogsCategoryWhereInput;
    countBlogsCategory(filters: Prisma.BlogsCategoryWhereInput): Prisma.PrismaPromise<number>;
    countBlogs(filters: Prisma.BlogsWhereInput): Prisma.PrismaPromise<number>;
    updateSEOData(blogId: number, seoData: SEOData): Prisma.Prisma__BlogsCategoryClient<{
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
    publishUnpublish(blogCategoryId: number, userId: number, status: boolean): Prisma.Prisma__BlogsCategoryClient<{
        id: number;
        slug: string;
        title: string;
        highlight: string;
        description: string;
        status: number;
        seoTitle: string;
        seoDescription: string;
        image: string;
        imageAlt: string;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
        addedById: number;
        modifiedById: number;
        deletedById: number;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
}
