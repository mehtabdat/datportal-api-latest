/// <reference types="multer" />
import { Prisma } from '@prisma/client';
import { Pagination } from 'src/common-types/common-types';
import { PrismaService } from 'src/prisma.service';
import { FeedbackFiltersDto } from './dto/feedback-filters.dto';
import { AuthenticatedUser } from 'src/authentication/jwt-payload';
import { CreateFeedbackDto } from './dto/create-feedback.dto';
import { FeedbackSortingDto } from './dto/feedback-sorting.dto';
export declare class FeedbackService {
    private prisma;
    private readonly logger;
    constructor(prisma: PrismaService);
    create(createDto: CreateFeedbackDto, user: AuthenticatedUser): Promise<{
        id: number;
        type: number;
        url: string;
        rating: number;
        comment: string;
        addedById: number;
        addedDate: Date;
    }>;
    findAll(filters: Prisma.FeedbackWhereInput, pagination: Pagination, sorting: FeedbackSortingDto): Prisma.PrismaPromise<({
        AddedBy: {
            id: number;
            phoneCode: string;
            status: number;
            isPublished: boolean;
            isDeleted: boolean;
            addedDate: Date;
            modifiedDate: Date;
            deletedDate: Date;
            Organization: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            };
            _count: {
                AdminAction: number;
                AssetAllocation: number;
                AttendanceAddedBy: number;
                AttendanceModifiedBy: number;
                Attendance: number;
                authTokens: number;
                BiometricsAddedBy: number;
                BiometricsModifiedBy: number;
                BiometricsChecks: number;
                BiometricsJob: number;
                BlogAddedBy: number;
                BlogDeletedBy: number;
                BlogModifiedBy: number;
                BlogCategoryAddedBy: number;
                BlogCategoryDeletedBy: number;
                BlogCategoryModifiedBy: number;
                CarReservationRequest: number;
                CashAdvanceRequest: number;
                ClientAddedBy: number;
                ClientDeletedBy: number;
                ClientModifiedBy: number;
                DailyRoutine: number;
                EnquiryAddedBy: number;
                EnquiryAssignedBy: number;
                EnquiryAssignedTo: number;
                EnquiryModifiedBy: number;
                Feedback: number;
                FileAddedBy: number;
                FileDeletedBy: number;
                FileModifiedBy: number;
                FileshareLogs: number;
                InvoiceAddedBy: number;
                InvoiceModifiedBy: number;
                InvoiceFollowUp: number;
                LeadEnquiryFollowUp: number;
                LeadAddedBy: number;
                LeadAssignedBy: number;
                LeadAssignedTo: number;
                LeadModifiedBy: number;
                LeaveCredits: number;
                LeaveRequest: number;
                OrganizationAddedBy: number;
                OrganizationDeletedBy: number;
                OrganizationModifiedBy: number;
                OrganizationDepartmentRelation: number;
                ContentAddedBy: number;
                ContentModifiedBy: number;
                PaymentGatewayAddedBy: number;
                PaymentGatewayDeletedBy: number;
                PaymentGatewayModifiedBy: number;
                PayrollModifiedBy: number;
                Payroll: number;
                PermitAddedBy: number;
                PermitModifiedBy: number;
                ProjectAddedBy: number;
                ProjectDeletedBy: number;
                ProjectModifiedBy: number;
                ProjectHoldBy: number;
                ProjectConversation: number;
                ProjectConversationReadLog: number;
                ProjectMembers: number;
                PublicHoliday: number;
                QuotationAddedBy: number;
                QuotationModifiedBy: number;
                QuotationMilestone: number;
                Reimbursement: number;
                RoleAddedBy: number;
                RoleDeletedBy: number;
                RoleModifiedBy: number;
                RolePermissionsAddedBy: number;
                Salary: number;
                SavedSearches: number;
                smsConfiguration: number;
                staticPageSEO: number;
                Notifications: number;
                systemLogs: number;
                TaskAddedBy: number;
                TaskClosedBy: number;
                TaskMembers: number;
                TransactionAddedBy: number;
                TransactionAssignedTo: number;
                TransactionModifiedBy: number;
                AddedBy: number;
                UserAddedBy: number;
                DeletedBy: number;
                UserDeletedBy: number;
                Department: number;
                Manager: number;
                Employees: number;
                ModifiedBy: number;
                UserModifiedBy: number;
                Organization: number;
                UserAlertsSetting: number;
                UserDocumentAddedBy: number;
                UserDocuments: number;
                UserMeta: number;
                userRole: number;
            };
            QuotationMilestone: {
                id: number;
                title: string;
                quotationId: number;
                status: number;
                invoiceId: number;
                completedById: number;
                amount: number;
                quantity: number;
                requirePayment: boolean;
                xeroReference: string;
                accountId: number;
                productId: number;
                taxAmount: number;
                taxRateId: number;
            }[];
            systemLogs: {
                id: number;
                table: string;
                tableColumnKey: string;
                tableColumnValue: string;
                valueType: string;
                actionType: string;
                message: string;
                endPoint: string;
                controllerName: string;
                data: Prisma.JsonValue;
                addedDate: Date;
                addedById: number;
            }[];
            email: string;
            uuid: string;
            firstName: string;
            lastName: string;
            phone: string;
            whatsapp: string;
            address: string;
            preferences: string;
            phoneVerified: boolean;
            emailVerified: boolean;
            password: string;
            profile: string;
            isAvatar: boolean;
            resetToken: string;
            resetTokenValidity: Date;
            userSignupSource: string;
            userSignupDeviceAgent: string;
            organizationId: number;
            departmentId: number;
            managerId: number;
            addedById: number;
            deletedById: number;
            modifiedById: number;
            designation: string;
            dateOfJoining: Date;
            lastWorkingDate: Date;
            remainingAnnualLeaves: number;
            enableRemoteCheckin: boolean;
            dataAccessRestrictedTo: number[];
            AdminAction: {
                id: number;
                departmentId: number;
                actionById: number;
                status: number;
                comment: string;
                addedDate: Date;
                reimbursementId: number;
                leaveRequestId: number;
                carReservationRequestId: number;
                cashAdvanceRequestId: number;
            }[];
            AssetAllocation: {
                id: number;
                userId: number;
                quantity: number;
                addedDate: Date;
                companyAssetId: number;
                label: string;
            }[];
            AttendanceAddedBy: {
                id: number;
                userId: number;
                checkIn: Date;
                checkOut: Date;
                totalHours: number;
                note: string;
                addedDate: Date;
                type: number;
                addedById: number;
                proRatedDeduction: number;
                staus: number;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            AttendanceModifiedBy: {
                id: number;
                userId: number;
                checkIn: Date;
                checkOut: Date;
                totalHours: number;
                note: string;
                addedDate: Date;
                type: number;
                addedById: number;
                proRatedDeduction: number;
                staus: number;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            Attendance: {
                id: number;
                userId: number;
                checkIn: Date;
                checkOut: Date;
                totalHours: number;
                note: string;
                addedDate: Date;
                type: number;
                addedById: number;
                proRatedDeduction: number;
                staus: number;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            authTokens: {
                id: number;
                tokenType: import(".prisma/client").$Enums.TokenTypes;
                token: string;
                userId: number;
                userAgent: string;
                userIP: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
            }[];
            BiometricsAddedBy: {
                id: number;
                addedDate: Date;
                userId: number;
                mode: import(".prisma/client").$Enums.BiometricsChecksType;
                addedById: number;
                biometricsJobId: number;
                checkIn: Date;
                type: number;
                isProcessed: boolean;
                latitude: number;
                longitude: number;
                selfie: string;
                userAgent: string;
                userIP: string;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            BiometricsModifiedBy: {
                id: number;
                addedDate: Date;
                userId: number;
                mode: import(".prisma/client").$Enums.BiometricsChecksType;
                addedById: number;
                biometricsJobId: number;
                checkIn: Date;
                type: number;
                isProcessed: boolean;
                latitude: number;
                longitude: number;
                selfie: string;
                userAgent: string;
                userIP: string;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            BiometricsChecks: {
                id: number;
                addedDate: Date;
                userId: number;
                mode: import(".prisma/client").$Enums.BiometricsChecksType;
                addedById: number;
                biometricsJobId: number;
                checkIn: Date;
                type: number;
                isProcessed: boolean;
                latitude: number;
                longitude: number;
                selfie: string;
                userAgent: string;
                userIP: string;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            BiometricsJob: {
                id: number;
                file: string;
                status: number;
                isDeleted: boolean;
                addedById: number;
                addedDate: Date;
                comment: string;
                title: string;
                backgroundId: string;
                failed: number;
                failedRecord: Prisma.JsonValue;
                failedReport: Prisma.JsonValue;
                mimeType: string;
                processeStartDate: Date;
                processedDate: Date;
                processedFile: string;
                success: number;
                totalRecords: number;
                uploadFormatId: number;
            }[];
            BlogAddedBy: {
                id: number;
                blogCategoryId: number;
                category: number;
                slug: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                title: string;
                highlight: string;
                description: string;
            }[];
            BlogDeletedBy: {
                id: number;
                blogCategoryId: number;
                category: number;
                slug: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                title: string;
                highlight: string;
                description: string;
            }[];
            BlogModifiedBy: {
                id: number;
                blogCategoryId: number;
                category: number;
                slug: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                title: string;
                highlight: string;
                description: string;
            }[];
            BlogCategoryAddedBy: {
                id: number;
                slug: string;
                title: string;
                highlight: string;
                description: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
            }[];
            BlogCategoryDeletedBy: {
                id: number;
                slug: string;
                title: string;
                highlight: string;
                description: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
            }[];
            BlogCategoryModifiedBy: {
                id: number;
                slug: string;
                title: string;
                highlight: string;
                description: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
            }[];
            CarReservationRequest: {
                id: number;
                requestById: number;
                projectId: number;
                companyCarId: number;
                status: number;
                addedDate: Date;
                fromDate: Date;
                purpose: string;
                toDate: Date;
            }[];
            CashAdvanceRequest: {
                id: number;
                requestById: number;
                requestAmount: number;
                purpose: string;
                approvedAmount: number;
                numberOfInstallments: number;
                installmentAmount: number;
                status: number;
                addedDate: Date;
                submittedDate: Date;
            }[];
            ClientAddedBy: {
                id: number;
                uuid: string;
                name: string;
                type: number;
                designation: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                companyId: number;
                addedById: number;
                addedDate: Date;
                deletedById: number;
                deletedDate: Date;
                isDeleted: boolean;
                modifiedById: number;
                modifiedDate: Date;
                taxRegistrationNumber: string;
            }[];
            ClientDeletedBy: {
                id: number;
                uuid: string;
                name: string;
                type: number;
                designation: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                companyId: number;
                addedById: number;
                addedDate: Date;
                deletedById: number;
                deletedDate: Date;
                isDeleted: boolean;
                modifiedById: number;
                modifiedDate: Date;
                taxRegistrationNumber: string;
            }[];
            ClientModifiedBy: {
                id: number;
                uuid: string;
                name: string;
                type: number;
                designation: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                companyId: number;
                addedById: number;
                addedDate: Date;
                deletedById: number;
                deletedDate: Date;
                isDeleted: boolean;
                modifiedById: number;
                modifiedDate: Date;
                taxRegistrationNumber: string;
            }[];
            DailyRoutine: {
                id: number;
                remarks: string;
                noOfHours: number;
                projectId: number;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                userId: number;
                taskTypeId: number;
            }[];
            EnquiryAddedBy: {
                id: number;
                uuid: string;
                name: string;
                slug: string;
                email: string;
                phone: string;
                phoneCode: string;
                message: string;
                source: string;
                userAgent: string;
                userIP: string;
                reference: string;
                isDeleted: boolean;
                status: number;
                addedDate: Date;
                hasReplied: boolean;
                timeDifference: number;
                repliedDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                assignedById: number;
                assignedToId: number;
                projectTypeId: number;
            }[];
            EnquiryAssignedBy: {
                id: number;
                uuid: string;
                name: string;
                slug: string;
                email: string;
                phone: string;
                phoneCode: string;
                message: string;
                source: string;
                userAgent: string;
                userIP: string;
                reference: string;
                isDeleted: boolean;
                status: number;
                addedDate: Date;
                hasReplied: boolean;
                timeDifference: number;
                repliedDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                assignedById: number;
                assignedToId: number;
                projectTypeId: number;
            }[];
            EnquiryAssignedTo: {
                id: number;
                uuid: string;
                name: string;
                slug: string;
                email: string;
                phone: string;
                phoneCode: string;
                message: string;
                source: string;
                userAgent: string;
                userIP: string;
                reference: string;
                isDeleted: boolean;
                status: number;
                addedDate: Date;
                hasReplied: boolean;
                timeDifference: number;
                repliedDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                assignedById: number;
                assignedToId: number;
                projectTypeId: number;
            }[];
            EnquiryModifiedBy: {
                id: number;
                uuid: string;
                name: string;
                slug: string;
                email: string;
                phone: string;
                phoneCode: string;
                message: string;
                source: string;
                userAgent: string;
                userIP: string;
                reference: string;
                isDeleted: boolean;
                status: number;
                addedDate: Date;
                hasReplied: boolean;
                timeDifference: number;
                repliedDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                assignedById: number;
                assignedToId: number;
                projectTypeId: number;
            }[];
            Feedback: {
                id: number;
                type: number;
                url: string;
                rating: number;
                comment: string;
                addedById: number;
                addedDate: Date;
            }[];
            FileAddedBy: {
                id: number;
                uuid: string;
                documentType: string;
                title: string;
                file: string;
                fileType: string;
                name: string;
                path: string;
                description: string;
                order: number;
                comments: string;
                visibility: import(".prisma/client").$Enums.FileVisibility;
                projectId: number;
                taskId: number;
                isTemp: boolean;
                status: number;
                isDeleted: boolean;
                isDefault: boolean;
                isProcessing: boolean;
                backgroundId: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                projectConversationId: number;
                permitId: number;
                fileSize: number;
            }[];
            FileDeletedBy: {
                id: number;
                uuid: string;
                documentType: string;
                title: string;
                file: string;
                fileType: string;
                name: string;
                path: string;
                description: string;
                order: number;
                comments: string;
                visibility: import(".prisma/client").$Enums.FileVisibility;
                projectId: number;
                taskId: number;
                isTemp: boolean;
                status: number;
                isDeleted: boolean;
                isDefault: boolean;
                isProcessing: boolean;
                backgroundId: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                projectConversationId: number;
                permitId: number;
                fileSize: number;
            }[];
            FileModifiedBy: {
                id: number;
                uuid: string;
                documentType: string;
                title: string;
                file: string;
                fileType: string;
                name: string;
                path: string;
                description: string;
                order: number;
                comments: string;
                visibility: import(".prisma/client").$Enums.FileVisibility;
                projectId: number;
                taskId: number;
                isTemp: boolean;
                status: number;
                isDeleted: boolean;
                isDefault: boolean;
                isProcessing: boolean;
                backgroundId: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                projectConversationId: number;
                permitId: number;
                fileSize: number;
            }[];
            FileshareLogs: {
                id: number;
                clientId: number;
                sharedById: number;
                addedDate: Date;
                projectId: number;
                fileId: number;
                batchNumber: number;
            }[];
            InvoiceAddedBy: {
                id: number;
                title: string;
                message: string;
                projectId: number;
                vatAmount: number;
                total: number;
                status: number;
                file: string;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                clientId: number;
                type: number;
                hasSupervisionCharge: boolean;
                quotationId: number;
                balance: number;
                subTotal: number;
                xeroReference: string;
                invoiceNumber: string;
                expiryDate: Date;
                issueDate: Date;
                xeroTenantId: string;
            }[];
            InvoiceModifiedBy: {
                id: number;
                title: string;
                message: string;
                projectId: number;
                vatAmount: number;
                total: number;
                status: number;
                file: string;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                clientId: number;
                type: number;
                hasSupervisionCharge: boolean;
                quotationId: number;
                balance: number;
                subTotal: number;
                xeroReference: string;
                invoiceNumber: string;
                expiryDate: Date;
                issueDate: Date;
                xeroTenantId: string;
            }[];
            InvoiceFollowUp: {
                id: number;
                note: string;
                isConcern: boolean;
                isResolved: boolean;
                addedDate: Date;
                addedById: number;
                invoiceId: number;
                isDeleted: boolean;
            }[];
            LeadEnquiryFollowUp: {
                id: number;
                note: string;
                addedDate: Date;
                addedById: number;
                enquiryId: number;
                leadId: number;
                isDeleted: boolean;
                isConcern: boolean;
                isResolved: boolean;
            }[];
            LeadAddedBy: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            }[];
            LeadAssignedBy: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            }[];
            LeadAssignedTo: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            }[];
            LeadModifiedBy: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            }[];
            LeaveCredits: {
                id: number;
                userId: number;
                daysCount: number;
                note: string;
                isDeleted: boolean;
                entryType: number;
                addedDate: Date;
            }[];
            LeaveRequest: {
                id: number;
                requestById: number;
                leaveFrom: Date;
                leaveTo: Date;
                status: number;
                addedDate: Date;
                submittedDate: Date;
                purpose: string;
                isPaid: boolean;
                leaveTypeId: number;
                totalDays: number;
            }[];
            OrganizationAddedBy: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            }[];
            OrganizationDeletedBy: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            }[];
            OrganizationModifiedBy: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            }[];
            OrganizationDepartmentRelation: {
                id: number;
                departmentId: number;
                organizationId: number;
                departmentHeadId: number;
            }[];
            ContentAddedBy: {
                id: number;
                pageSectionId: number;
                image: string;
                imageAlt: string;
                isDefault: number;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                isPublished: boolean;
                isDeleted: boolean;
                title: string;
                highlight: string;
                description: string;
            }[];
            ContentModifiedBy: {
                id: number;
                pageSectionId: number;
                image: string;
                imageAlt: string;
                isDefault: number;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                isPublished: boolean;
                isDeleted: boolean;
                title: string;
                highlight: string;
                description: string;
            }[];
            PaymentGatewayAddedBy: {
                id: number;
                title: string;
                slug: string;
                gatewayURL: string;
                gatewayPublicKey: string;
                gatewayPrivateKey: string;
                storeId: string;
                test: boolean;
                isPublished: boolean;
                isDeleted: boolean;
                countryId: number;
                isDefault: boolean;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                deletedDate: Date;
                deletedById: number;
            }[];
            PaymentGatewayDeletedBy: {
                id: number;
                title: string;
                slug: string;
                gatewayURL: string;
                gatewayPublicKey: string;
                gatewayPrivateKey: string;
                storeId: string;
                test: boolean;
                isPublished: boolean;
                isDeleted: boolean;
                countryId: number;
                isDefault: boolean;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                deletedDate: Date;
                deletedById: number;
            }[];
            PaymentGatewayModifiedBy: {
                id: number;
                title: string;
                slug: string;
                gatewayURL: string;
                gatewayPublicKey: string;
                gatewayPrivateKey: string;
                storeId: string;
                test: boolean;
                isPublished: boolean;
                isDeleted: boolean;
                countryId: number;
                isDefault: boolean;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                deletedDate: Date;
                deletedById: number;
            }[];
            PayrollModifiedBy: {
                id: number;
                monthYear: Date;
                userId: number;
                totalLates: number;
                toBeDeductedFromLeaveCredits: number;
                file: string;
                addedDate: Date;
                isDeleted: boolean;
                manualCorrection: number;
                modifiedById: number;
                modifiedDate: Date;
                note: string;
                otherAmount: number;
                paid: boolean;
                paidDate: Date;
                payrollCycleId: number;
                salaryAmount: number;
                salaryId: number;
                toBeDeductedFromCurrentSalary: number;
                totalAbsences: number;
                totalDaysWorked: number;
                totalDeduction: number;
                totalIncompletes: number;
                totalReceivable: number;
                totalWorkingDays: number;
                processing: boolean;
                totalDays: number;
            }[];
            Payroll: {
                id: number;
                monthYear: Date;
                userId: number;
                totalLates: number;
                toBeDeductedFromLeaveCredits: number;
                file: string;
                addedDate: Date;
                isDeleted: boolean;
                manualCorrection: number;
                modifiedById: number;
                modifiedDate: Date;
                note: string;
                otherAmount: number;
                paid: boolean;
                paidDate: Date;
                payrollCycleId: number;
                salaryAmount: number;
                salaryId: number;
                toBeDeductedFromCurrentSalary: number;
                totalAbsences: number;
                totalDaysWorked: number;
                totalDeduction: number;
                totalIncompletes: number;
                totalReceivable: number;
                totalWorkingDays: number;
                processing: boolean;
                totalDays: number;
            }[];
            PermitAddedBy: {
                id: number;
                clientId: number;
                projectId: number;
                authorityId: number;
                title: string;
                remarks: string;
                financeStatus: number;
                clientStatus: number;
                approvedDate: Date;
                expiryDate: Date;
                addedDate: Date;
                modifiedDate: Date;
                isDeleted: boolean;
                addedById: number;
                modifiedById: number;
            }[];
            PermitModifiedBy: {
                id: number;
                clientId: number;
                projectId: number;
                authorityId: number;
                title: string;
                remarks: string;
                financeStatus: number;
                clientStatus: number;
                approvedDate: Date;
                expiryDate: Date;
                addedDate: Date;
                modifiedDate: Date;
                isDeleted: boolean;
                addedById: number;
                modifiedById: number;
            }[];
            ProjectAddedBy: {
                id: number;
                slug: string;
                title: string;
                submissionById: number;
                clientId: number;
                projectTypeId: number;
                instructions: string;
                projectFilesLink: string;
                priority: number;
                startDate: Date;
                endDate: Date;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isDeleted: boolean;
                isClosed: boolean;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                leadId: number;
                comment: string;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                xeroReference: string;
                projectEstimate: number;
                xeroTenantId: string;
            }[];
            ProjectDeletedBy: {
                id: number;
                slug: string;
                title: string;
                submissionById: number;
                clientId: number;
                projectTypeId: number;
                instructions: string;
                projectFilesLink: string;
                priority: number;
                startDate: Date;
                endDate: Date;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isDeleted: boolean;
                isClosed: boolean;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                leadId: number;
                comment: string;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                xeroReference: string;
                projectEstimate: number;
                xeroTenantId: string;
            }[];
            ProjectModifiedBy: {
                id: number;
                slug: string;
                title: string;
                submissionById: number;
                clientId: number;
                projectTypeId: number;
                instructions: string;
                projectFilesLink: string;
                priority: number;
                startDate: Date;
                endDate: Date;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isDeleted: boolean;
                isClosed: boolean;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                leadId: number;
                comment: string;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                xeroReference: string;
                projectEstimate: number;
                xeroTenantId: string;
            }[];
            ProjectHoldBy: {
                id: number;
                slug: string;
                title: string;
                submissionById: number;
                clientId: number;
                projectTypeId: number;
                instructions: string;
                projectFilesLink: string;
                priority: number;
                startDate: Date;
                endDate: Date;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isDeleted: boolean;
                isClosed: boolean;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                leadId: number;
                comment: string;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                xeroReference: string;
                projectEstimate: number;
                xeroTenantId: string;
            }[];
            ProjectConversation: {
                id: number;
                projectId: number;
                message: string;
                userId: number;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
            }[];
            ProjectConversationReadLog: {
                conversationId: number;
                userId: number;
                read: boolean;
            }[];
            ProjectMembers: {
                id: number;
                userId: number;
                projectId: number;
                projectRole: number;
            }[];
            PublicHoliday: {
                id: number;
                title: string;
                date: Date;
                addedById: number;
                addedDate: Date;
            }[];
            QuotationAddedBy: {
                id: number;
                leadId: number;
                scopeOfWork: string;
                file: string;
                type: number;
                status: number;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                paymentTerms: string;
                hasSupervision: boolean;
                supervisionMonthlyCharge: number;
                supervisionPaymentSchedule: number;
                projectId: number;
                expiryDate: Date;
                revisedQuotationReferenceId: number;
                revisionCount: number;
                subTotal: number;
                total: number;
                vatAmount: number;
                xeroReference: string;
                quoteNumber: string;
                brandingThemeId: number;
                issueDate: Date;
                xeroTenantId: string;
                note: string;
            }[];
            QuotationModifiedBy: {
                id: number;
                leadId: number;
                scopeOfWork: string;
                file: string;
                type: number;
                status: number;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                paymentTerms: string;
                hasSupervision: boolean;
                supervisionMonthlyCharge: number;
                supervisionPaymentSchedule: number;
                projectId: number;
                expiryDate: Date;
                revisedQuotationReferenceId: number;
                revisionCount: number;
                subTotal: number;
                total: number;
                vatAmount: number;
                xeroReference: string;
                quoteNumber: string;
                brandingThemeId: number;
                issueDate: Date;
                xeroTenantId: string;
                note: string;
            }[];
            Reimbursement: {
                id: number;
                requestById: number;
                approvedAmount: number;
                purpose: string;
                status: number;
                addedDate: Date;
                claimedAmount: number;
                isDeleted: boolean;
            }[];
            RoleAddedBy: {
                id: number;
                title: string;
                slug: string;
                description: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                level: number;
            }[];
            RoleDeletedBy: {
                id: number;
                title: string;
                slug: string;
                description: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                level: number;
            }[];
            RoleModifiedBy: {
                id: number;
                title: string;
                slug: string;
                description: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                level: number;
            }[];
            RolePermissionsAddedBy: {
                id: number;
                addedDate: Date;
                roleId: number;
                permissionsId: number;
                addedById: number;
            }[];
            Salary: {
                id: number;
                userId: number;
                amount: number;
                startDate: Date;
                endDate: Date;
                isActive: boolean;
                addedDate: Date;
            }[];
            SavedSearches: {
                id: number;
                title: string;
                userId: number;
                filters: Prisma.JsonValue;
                icon: string;
                forAdminpanel: boolean;
                visibility: import(".prisma/client").$Enums.SavedSearchesVisibility;
                organizationId: number;
                isPrivate: boolean;
                addedDate: Date;
                modifiedDate: Date;
                isPublished: boolean;
                isDeleted: boolean;
            }[];
            smsConfiguration: {
                id: number;
                slug: string;
                title: string;
                gateway: string;
                appId: string;
                appPassword: string;
                senderId: string;
                senderIdType: import(".prisma/client").$Enums.SMSType;
                test: boolean;
                priority: number;
                isDefault: boolean;
                isPublished: boolean;
                isDeleted: boolean;
                countryId: number;
                addedDate: Date;
                addedById: number;
            }[];
            staticPageSEO: {
                id: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                isDefault: number;
                sitePageId: number;
                addedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
            }[];
            Notifications: {
                userId: number;
                notificationId: number;
                modifiedDate: Date;
                read: boolean;
            }[];
            TaskAddedBy: {
                id: number;
                uuid: string;
                title: string;
                priority: number;
                instructions: string;
                taskStartFrom: Date;
                taskEndOn: Date;
                hasExtendedDate: boolean;
                extendedDate: Date;
                reasonOfExtension: string;
                addedById: number;
                closedById: number;
                status: number;
                addedDate: Date;
                isDeleted: boolean;
                order: number;
                projectId: number;
                type: number;
            }[];
            TaskClosedBy: {
                id: number;
                uuid: string;
                title: string;
                priority: number;
                instructions: string;
                taskStartFrom: Date;
                taskEndOn: Date;
                hasExtendedDate: boolean;
                extendedDate: Date;
                reasonOfExtension: string;
                addedById: number;
                closedById: number;
                status: number;
                addedDate: Date;
                isDeleted: boolean;
                order: number;
                projectId: number;
                type: number;
            }[];
            TaskMembers: {
                id: number;
                userId: number;
                taskId: number;
            }[];
            TransactionAddedBy: {
                id: number;
                amount: number;
                transactionDate: Date;
                status: number;
                transactionReference: string;
                addedDate: Date;
                addedById: number;
                projectId: number;
                clientId: number;
                modifiedById: number;
                modifiedDate: Date;
                remarks: string;
                title: string;
                assignedToId: number;
                authorityId: number;
                isDeleted: boolean;
                receipt: string;
                invoiceId: number;
                xeroReference: string;
                recordType: number;
            }[];
            TransactionAssignedTo: {
                id: number;
                amount: number;
                transactionDate: Date;
                status: number;
                transactionReference: string;
                addedDate: Date;
                addedById: number;
                projectId: number;
                clientId: number;
                modifiedById: number;
                modifiedDate: Date;
                remarks: string;
                title: string;
                assignedToId: number;
                authorityId: number;
                isDeleted: boolean;
                receipt: string;
                invoiceId: number;
                xeroReference: string;
                recordType: number;
            }[];
            TransactionModifiedBy: {
                id: number;
                amount: number;
                transactionDate: Date;
                status: number;
                transactionReference: string;
                addedDate: Date;
                addedById: number;
                projectId: number;
                clientId: number;
                modifiedById: number;
                modifiedDate: Date;
                remarks: string;
                title: string;
                assignedToId: number;
                authorityId: number;
                isDeleted: boolean;
                receipt: string;
                invoiceId: number;
                xeroReference: string;
                recordType: number;
            }[];
            AddedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            UserAddedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            }[];
            DeletedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            UserDeletedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            }[];
            Department: {
                id: number;
                title: string;
                slug: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
            };
            Manager: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            Employees: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            }[];
            ModifiedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            UserModifiedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            }[];
            UserAlertsSetting: {
                id: number;
                userId: number;
                alertsTypeId: number;
                desktop: boolean;
                mobile: boolean;
                email: boolean;
                app: boolean;
                addedDate: Date;
                modifiedDate: Date;
            }[];
            UserDocumentAddedBy: {
                id: number;
                title: string;
                file: string;
                documentType: string;
                mimeType: string;
                addedDate: Date;
                userId: number;
                addedById: number;
                isDeleted: boolean;
            }[];
            UserDocuments: {
                id: number;
                title: string;
                file: string;
                documentType: string;
                mimeType: string;
                addedDate: Date;
                userId: number;
                addedById: number;
                isDeleted: boolean;
            }[];
            UserMeta: {
                id: number;
                key: string;
                value: string;
                userId: number;
            }[];
            userRole: {
                id: number;
                userId: number;
                roleId: number;
            }[];
        };
        Attatchments: {
            id: number;
            file: string;
            addedDate: Date;
            feedbackId: number;
        }[];
    } & {
        id: number;
        type: number;
        url: string;
        rating: number;
        comment: string;
        addedById: number;
        addedDate: Date;
    })[]>;
    findOne(id: number): Promise<{
        AddedBy: {
            id: number;
            phoneCode: string;
            status: number;
            isPublished: boolean;
            isDeleted: boolean;
            addedDate: Date;
            modifiedDate: Date;
            deletedDate: Date;
            Organization: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            };
            _count: {
                AdminAction: number;
                AssetAllocation: number;
                AttendanceAddedBy: number;
                AttendanceModifiedBy: number;
                Attendance: number;
                authTokens: number;
                BiometricsAddedBy: number;
                BiometricsModifiedBy: number;
                BiometricsChecks: number;
                BiometricsJob: number;
                BlogAddedBy: number;
                BlogDeletedBy: number;
                BlogModifiedBy: number;
                BlogCategoryAddedBy: number;
                BlogCategoryDeletedBy: number;
                BlogCategoryModifiedBy: number;
                CarReservationRequest: number;
                CashAdvanceRequest: number;
                ClientAddedBy: number;
                ClientDeletedBy: number;
                ClientModifiedBy: number;
                DailyRoutine: number;
                EnquiryAddedBy: number;
                EnquiryAssignedBy: number;
                EnquiryAssignedTo: number;
                EnquiryModifiedBy: number;
                Feedback: number;
                FileAddedBy: number;
                FileDeletedBy: number;
                FileModifiedBy: number;
                FileshareLogs: number;
                InvoiceAddedBy: number;
                InvoiceModifiedBy: number;
                InvoiceFollowUp: number;
                LeadEnquiryFollowUp: number;
                LeadAddedBy: number;
                LeadAssignedBy: number;
                LeadAssignedTo: number;
                LeadModifiedBy: number;
                LeaveCredits: number;
                LeaveRequest: number;
                OrganizationAddedBy: number;
                OrganizationDeletedBy: number;
                OrganizationModifiedBy: number;
                OrganizationDepartmentRelation: number;
                ContentAddedBy: number;
                ContentModifiedBy: number;
                PaymentGatewayAddedBy: number;
                PaymentGatewayDeletedBy: number;
                PaymentGatewayModifiedBy: number;
                PayrollModifiedBy: number;
                Payroll: number;
                PermitAddedBy: number;
                PermitModifiedBy: number;
                ProjectAddedBy: number;
                ProjectDeletedBy: number;
                ProjectModifiedBy: number;
                ProjectHoldBy: number;
                ProjectConversation: number;
                ProjectConversationReadLog: number;
                ProjectMembers: number;
                PublicHoliday: number;
                QuotationAddedBy: number;
                QuotationModifiedBy: number;
                QuotationMilestone: number;
                Reimbursement: number;
                RoleAddedBy: number;
                RoleDeletedBy: number;
                RoleModifiedBy: number;
                RolePermissionsAddedBy: number;
                Salary: number;
                SavedSearches: number;
                smsConfiguration: number;
                staticPageSEO: number;
                Notifications: number;
                systemLogs: number;
                TaskAddedBy: number;
                TaskClosedBy: number;
                TaskMembers: number;
                TransactionAddedBy: number;
                TransactionAssignedTo: number;
                TransactionModifiedBy: number;
                AddedBy: number;
                UserAddedBy: number;
                DeletedBy: number;
                UserDeletedBy: number;
                Department: number;
                Manager: number;
                Employees: number;
                ModifiedBy: number;
                UserModifiedBy: number;
                Organization: number;
                UserAlertsSetting: number;
                UserDocumentAddedBy: number;
                UserDocuments: number;
                UserMeta: number;
                userRole: number;
            };
            QuotationMilestone: {
                id: number;
                title: string;
                quotationId: number;
                status: number;
                invoiceId: number;
                completedById: number;
                amount: number;
                quantity: number;
                requirePayment: boolean;
                xeroReference: string;
                accountId: number;
                productId: number;
                taxAmount: number;
                taxRateId: number;
            }[];
            systemLogs: {
                id: number;
                table: string;
                tableColumnKey: string;
                tableColumnValue: string;
                valueType: string;
                actionType: string;
                message: string;
                endPoint: string;
                controllerName: string;
                data: Prisma.JsonValue;
                addedDate: Date;
                addedById: number;
            }[];
            email: string;
            uuid: string;
            firstName: string;
            lastName: string;
            phone: string;
            whatsapp: string;
            address: string;
            preferences: string;
            phoneVerified: boolean;
            emailVerified: boolean;
            password: string;
            profile: string;
            isAvatar: boolean;
            resetToken: string;
            resetTokenValidity: Date;
            userSignupSource: string;
            userSignupDeviceAgent: string;
            organizationId: number;
            departmentId: number;
            managerId: number;
            addedById: number;
            deletedById: number;
            modifiedById: number;
            designation: string;
            dateOfJoining: Date;
            lastWorkingDate: Date;
            remainingAnnualLeaves: number;
            enableRemoteCheckin: boolean;
            dataAccessRestrictedTo: number[];
            AdminAction: {
                id: number;
                departmentId: number;
                actionById: number;
                status: number;
                comment: string;
                addedDate: Date;
                reimbursementId: number;
                leaveRequestId: number;
                carReservationRequestId: number;
                cashAdvanceRequestId: number;
            }[];
            AssetAllocation: {
                id: number;
                userId: number;
                quantity: number;
                addedDate: Date;
                companyAssetId: number;
                label: string;
            }[];
            AttendanceAddedBy: {
                id: number;
                userId: number;
                checkIn: Date;
                checkOut: Date;
                totalHours: number;
                note: string;
                addedDate: Date;
                type: number;
                addedById: number;
                proRatedDeduction: number;
                staus: number;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            AttendanceModifiedBy: {
                id: number;
                userId: number;
                checkIn: Date;
                checkOut: Date;
                totalHours: number;
                note: string;
                addedDate: Date;
                type: number;
                addedById: number;
                proRatedDeduction: number;
                staus: number;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            Attendance: {
                id: number;
                userId: number;
                checkIn: Date;
                checkOut: Date;
                totalHours: number;
                note: string;
                addedDate: Date;
                type: number;
                addedById: number;
                proRatedDeduction: number;
                staus: number;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            authTokens: {
                id: number;
                tokenType: import(".prisma/client").$Enums.TokenTypes;
                token: string;
                userId: number;
                userAgent: string;
                userIP: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
            }[];
            BiometricsAddedBy: {
                id: number;
                addedDate: Date;
                userId: number;
                mode: import(".prisma/client").$Enums.BiometricsChecksType;
                addedById: number;
                biometricsJobId: number;
                checkIn: Date;
                type: number;
                isProcessed: boolean;
                latitude: number;
                longitude: number;
                selfie: string;
                userAgent: string;
                userIP: string;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            BiometricsModifiedBy: {
                id: number;
                addedDate: Date;
                userId: number;
                mode: import(".prisma/client").$Enums.BiometricsChecksType;
                addedById: number;
                biometricsJobId: number;
                checkIn: Date;
                type: number;
                isProcessed: boolean;
                latitude: number;
                longitude: number;
                selfie: string;
                userAgent: string;
                userIP: string;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            BiometricsChecks: {
                id: number;
                addedDate: Date;
                userId: number;
                mode: import(".prisma/client").$Enums.BiometricsChecksType;
                addedById: number;
                biometricsJobId: number;
                checkIn: Date;
                type: number;
                isProcessed: boolean;
                latitude: number;
                longitude: number;
                selfie: string;
                userAgent: string;
                userIP: string;
                modifiedById: number;
                modifiedDate: Date;
            }[];
            BiometricsJob: {
                id: number;
                file: string;
                status: number;
                isDeleted: boolean;
                addedById: number;
                addedDate: Date;
                comment: string;
                title: string;
                backgroundId: string;
                failed: number;
                failedRecord: Prisma.JsonValue;
                failedReport: Prisma.JsonValue;
                mimeType: string;
                processeStartDate: Date;
                processedDate: Date;
                processedFile: string;
                success: number;
                totalRecords: number;
                uploadFormatId: number;
            }[];
            BlogAddedBy: {
                id: number;
                blogCategoryId: number;
                category: number;
                slug: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                title: string;
                highlight: string;
                description: string;
            }[];
            BlogDeletedBy: {
                id: number;
                blogCategoryId: number;
                category: number;
                slug: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                title: string;
                highlight: string;
                description: string;
            }[];
            BlogModifiedBy: {
                id: number;
                blogCategoryId: number;
                category: number;
                slug: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                title: string;
                highlight: string;
                description: string;
            }[];
            BlogCategoryAddedBy: {
                id: number;
                slug: string;
                title: string;
                highlight: string;
                description: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
            }[];
            BlogCategoryDeletedBy: {
                id: number;
                slug: string;
                title: string;
                highlight: string;
                description: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
            }[];
            BlogCategoryModifiedBy: {
                id: number;
                slug: string;
                title: string;
                highlight: string;
                description: string;
                status: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                imageAlt: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                modifiedById: number;
                deletedById: number;
            }[];
            CarReservationRequest: {
                id: number;
                requestById: number;
                projectId: number;
                companyCarId: number;
                status: number;
                addedDate: Date;
                fromDate: Date;
                purpose: string;
                toDate: Date;
            }[];
            CashAdvanceRequest: {
                id: number;
                requestById: number;
                requestAmount: number;
                purpose: string;
                approvedAmount: number;
                numberOfInstallments: number;
                installmentAmount: number;
                status: number;
                addedDate: Date;
                submittedDate: Date;
            }[];
            ClientAddedBy: {
                id: number;
                uuid: string;
                name: string;
                type: number;
                designation: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                companyId: number;
                addedById: number;
                addedDate: Date;
                deletedById: number;
                deletedDate: Date;
                isDeleted: boolean;
                modifiedById: number;
                modifiedDate: Date;
                taxRegistrationNumber: string;
            }[];
            ClientDeletedBy: {
                id: number;
                uuid: string;
                name: string;
                type: number;
                designation: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                companyId: number;
                addedById: number;
                addedDate: Date;
                deletedById: number;
                deletedDate: Date;
                isDeleted: boolean;
                modifiedById: number;
                modifiedDate: Date;
                taxRegistrationNumber: string;
            }[];
            ClientModifiedBy: {
                id: number;
                uuid: string;
                name: string;
                type: number;
                designation: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                companyId: number;
                addedById: number;
                addedDate: Date;
                deletedById: number;
                deletedDate: Date;
                isDeleted: boolean;
                modifiedById: number;
                modifiedDate: Date;
                taxRegistrationNumber: string;
            }[];
            DailyRoutine: {
                id: number;
                remarks: string;
                noOfHours: number;
                projectId: number;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                userId: number;
                taskTypeId: number;
            }[];
            EnquiryAddedBy: {
                id: number;
                uuid: string;
                name: string;
                slug: string;
                email: string;
                phone: string;
                phoneCode: string;
                message: string;
                source: string;
                userAgent: string;
                userIP: string;
                reference: string;
                isDeleted: boolean;
                status: number;
                addedDate: Date;
                hasReplied: boolean;
                timeDifference: number;
                repliedDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                assignedById: number;
                assignedToId: number;
                projectTypeId: number;
            }[];
            EnquiryAssignedBy: {
                id: number;
                uuid: string;
                name: string;
                slug: string;
                email: string;
                phone: string;
                phoneCode: string;
                message: string;
                source: string;
                userAgent: string;
                userIP: string;
                reference: string;
                isDeleted: boolean;
                status: number;
                addedDate: Date;
                hasReplied: boolean;
                timeDifference: number;
                repliedDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                assignedById: number;
                assignedToId: number;
                projectTypeId: number;
            }[];
            EnquiryAssignedTo: {
                id: number;
                uuid: string;
                name: string;
                slug: string;
                email: string;
                phone: string;
                phoneCode: string;
                message: string;
                source: string;
                userAgent: string;
                userIP: string;
                reference: string;
                isDeleted: boolean;
                status: number;
                addedDate: Date;
                hasReplied: boolean;
                timeDifference: number;
                repliedDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                assignedById: number;
                assignedToId: number;
                projectTypeId: number;
            }[];
            EnquiryModifiedBy: {
                id: number;
                uuid: string;
                name: string;
                slug: string;
                email: string;
                phone: string;
                phoneCode: string;
                message: string;
                source: string;
                userAgent: string;
                userIP: string;
                reference: string;
                isDeleted: boolean;
                status: number;
                addedDate: Date;
                hasReplied: boolean;
                timeDifference: number;
                repliedDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                assignedById: number;
                assignedToId: number;
                projectTypeId: number;
            }[];
            Feedback: {
                id: number;
                type: number;
                url: string;
                rating: number;
                comment: string;
                addedById: number;
                addedDate: Date;
            }[];
            FileAddedBy: {
                id: number;
                uuid: string;
                documentType: string;
                title: string;
                file: string;
                fileType: string;
                name: string;
                path: string;
                description: string;
                order: number;
                comments: string;
                visibility: import(".prisma/client").$Enums.FileVisibility;
                projectId: number;
                taskId: number;
                isTemp: boolean;
                status: number;
                isDeleted: boolean;
                isDefault: boolean;
                isProcessing: boolean;
                backgroundId: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                projectConversationId: number;
                permitId: number;
                fileSize: number;
            }[];
            FileDeletedBy: {
                id: number;
                uuid: string;
                documentType: string;
                title: string;
                file: string;
                fileType: string;
                name: string;
                path: string;
                description: string;
                order: number;
                comments: string;
                visibility: import(".prisma/client").$Enums.FileVisibility;
                projectId: number;
                taskId: number;
                isTemp: boolean;
                status: number;
                isDeleted: boolean;
                isDefault: boolean;
                isProcessing: boolean;
                backgroundId: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                projectConversationId: number;
                permitId: number;
                fileSize: number;
            }[];
            FileModifiedBy: {
                id: number;
                uuid: string;
                documentType: string;
                title: string;
                file: string;
                fileType: string;
                name: string;
                path: string;
                description: string;
                order: number;
                comments: string;
                visibility: import(".prisma/client").$Enums.FileVisibility;
                projectId: number;
                taskId: number;
                isTemp: boolean;
                status: number;
                isDeleted: boolean;
                isDefault: boolean;
                isProcessing: boolean;
                backgroundId: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                projectConversationId: number;
                permitId: number;
                fileSize: number;
            }[];
            FileshareLogs: {
                id: number;
                clientId: number;
                sharedById: number;
                addedDate: Date;
                projectId: number;
                fileId: number;
                batchNumber: number;
            }[];
            InvoiceAddedBy: {
                id: number;
                title: string;
                message: string;
                projectId: number;
                vatAmount: number;
                total: number;
                status: number;
                file: string;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                clientId: number;
                type: number;
                hasSupervisionCharge: boolean;
                quotationId: number;
                balance: number;
                subTotal: number;
                xeroReference: string;
                invoiceNumber: string;
                expiryDate: Date;
                issueDate: Date;
                xeroTenantId: string;
            }[];
            InvoiceModifiedBy: {
                id: number;
                title: string;
                message: string;
                projectId: number;
                vatAmount: number;
                total: number;
                status: number;
                file: string;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                clientId: number;
                type: number;
                hasSupervisionCharge: boolean;
                quotationId: number;
                balance: number;
                subTotal: number;
                xeroReference: string;
                invoiceNumber: string;
                expiryDate: Date;
                issueDate: Date;
                xeroTenantId: string;
            }[];
            InvoiceFollowUp: {
                id: number;
                note: string;
                isConcern: boolean;
                isResolved: boolean;
                addedDate: Date;
                addedById: number;
                invoiceId: number;
                isDeleted: boolean;
            }[];
            LeadEnquiryFollowUp: {
                id: number;
                note: string;
                addedDate: Date;
                addedById: number;
                enquiryId: number;
                leadId: number;
                isDeleted: boolean;
                isConcern: boolean;
                isResolved: boolean;
            }[];
            LeadAddedBy: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            }[];
            LeadAssignedBy: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            }[];
            LeadAssignedTo: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            }[];
            LeadModifiedBy: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            }[];
            LeaveCredits: {
                id: number;
                userId: number;
                daysCount: number;
                note: string;
                isDeleted: boolean;
                entryType: number;
                addedDate: Date;
            }[];
            LeaveRequest: {
                id: number;
                requestById: number;
                leaveFrom: Date;
                leaveTo: Date;
                status: number;
                addedDate: Date;
                submittedDate: Date;
                purpose: string;
                isPaid: boolean;
                leaveTypeId: number;
                totalDays: number;
            }[];
            OrganizationAddedBy: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            }[];
            OrganizationDeletedBy: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            }[];
            OrganizationModifiedBy: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            }[];
            OrganizationDepartmentRelation: {
                id: number;
                departmentId: number;
                organizationId: number;
                departmentHeadId: number;
            }[];
            ContentAddedBy: {
                id: number;
                pageSectionId: number;
                image: string;
                imageAlt: string;
                isDefault: number;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                isPublished: boolean;
                isDeleted: boolean;
                title: string;
                highlight: string;
                description: string;
            }[];
            ContentModifiedBy: {
                id: number;
                pageSectionId: number;
                image: string;
                imageAlt: string;
                isDefault: number;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                isPublished: boolean;
                isDeleted: boolean;
                title: string;
                highlight: string;
                description: string;
            }[];
            PaymentGatewayAddedBy: {
                id: number;
                title: string;
                slug: string;
                gatewayURL: string;
                gatewayPublicKey: string;
                gatewayPrivateKey: string;
                storeId: string;
                test: boolean;
                isPublished: boolean;
                isDeleted: boolean;
                countryId: number;
                isDefault: boolean;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                deletedDate: Date;
                deletedById: number;
            }[];
            PaymentGatewayDeletedBy: {
                id: number;
                title: string;
                slug: string;
                gatewayURL: string;
                gatewayPublicKey: string;
                gatewayPrivateKey: string;
                storeId: string;
                test: boolean;
                isPublished: boolean;
                isDeleted: boolean;
                countryId: number;
                isDefault: boolean;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                deletedDate: Date;
                deletedById: number;
            }[];
            PaymentGatewayModifiedBy: {
                id: number;
                title: string;
                slug: string;
                gatewayURL: string;
                gatewayPublicKey: string;
                gatewayPrivateKey: string;
                storeId: string;
                test: boolean;
                isPublished: boolean;
                isDeleted: boolean;
                countryId: number;
                isDefault: boolean;
                addedDate: Date;
                addedById: number;
                modifiedDate: Date;
                modifiedById: number;
                deletedDate: Date;
                deletedById: number;
            }[];
            PayrollModifiedBy: {
                id: number;
                monthYear: Date;
                userId: number;
                totalLates: number;
                toBeDeductedFromLeaveCredits: number;
                file: string;
                addedDate: Date;
                isDeleted: boolean;
                manualCorrection: number;
                modifiedById: number;
                modifiedDate: Date;
                note: string;
                otherAmount: number;
                paid: boolean;
                paidDate: Date;
                payrollCycleId: number;
                salaryAmount: number;
                salaryId: number;
                toBeDeductedFromCurrentSalary: number;
                totalAbsences: number;
                totalDaysWorked: number;
                totalDeduction: number;
                totalIncompletes: number;
                totalReceivable: number;
                totalWorkingDays: number;
                processing: boolean;
                totalDays: number;
            }[];
            Payroll: {
                id: number;
                monthYear: Date;
                userId: number;
                totalLates: number;
                toBeDeductedFromLeaveCredits: number;
                file: string;
                addedDate: Date;
                isDeleted: boolean;
                manualCorrection: number;
                modifiedById: number;
                modifiedDate: Date;
                note: string;
                otherAmount: number;
                paid: boolean;
                paidDate: Date;
                payrollCycleId: number;
                salaryAmount: number;
                salaryId: number;
                toBeDeductedFromCurrentSalary: number;
                totalAbsences: number;
                totalDaysWorked: number;
                totalDeduction: number;
                totalIncompletes: number;
                totalReceivable: number;
                totalWorkingDays: number;
                processing: boolean;
                totalDays: number;
            }[];
            PermitAddedBy: {
                id: number;
                clientId: number;
                projectId: number;
                authorityId: number;
                title: string;
                remarks: string;
                financeStatus: number;
                clientStatus: number;
                approvedDate: Date;
                expiryDate: Date;
                addedDate: Date;
                modifiedDate: Date;
                isDeleted: boolean;
                addedById: number;
                modifiedById: number;
            }[];
            PermitModifiedBy: {
                id: number;
                clientId: number;
                projectId: number;
                authorityId: number;
                title: string;
                remarks: string;
                financeStatus: number;
                clientStatus: number;
                approvedDate: Date;
                expiryDate: Date;
                addedDate: Date;
                modifiedDate: Date;
                isDeleted: boolean;
                addedById: number;
                modifiedById: number;
            }[];
            ProjectAddedBy: {
                id: number;
                slug: string;
                title: string;
                submissionById: number;
                clientId: number;
                projectTypeId: number;
                instructions: string;
                projectFilesLink: string;
                priority: number;
                startDate: Date;
                endDate: Date;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isDeleted: boolean;
                isClosed: boolean;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                leadId: number;
                comment: string;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                xeroReference: string;
                projectEstimate: number;
                xeroTenantId: string;
            }[];
            ProjectDeletedBy: {
                id: number;
                slug: string;
                title: string;
                submissionById: number;
                clientId: number;
                projectTypeId: number;
                instructions: string;
                projectFilesLink: string;
                priority: number;
                startDate: Date;
                endDate: Date;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isDeleted: boolean;
                isClosed: boolean;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                leadId: number;
                comment: string;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                xeroReference: string;
                projectEstimate: number;
                xeroTenantId: string;
            }[];
            ProjectModifiedBy: {
                id: number;
                slug: string;
                title: string;
                submissionById: number;
                clientId: number;
                projectTypeId: number;
                instructions: string;
                projectFilesLink: string;
                priority: number;
                startDate: Date;
                endDate: Date;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isDeleted: boolean;
                isClosed: boolean;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                leadId: number;
                comment: string;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                xeroReference: string;
                projectEstimate: number;
                xeroTenantId: string;
            }[];
            ProjectHoldBy: {
                id: number;
                slug: string;
                title: string;
                submissionById: number;
                clientId: number;
                projectTypeId: number;
                instructions: string;
                projectFilesLink: string;
                priority: number;
                startDate: Date;
                endDate: Date;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isDeleted: boolean;
                isClosed: boolean;
                addedById: number;
                modifiedById: number;
                deletedById: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                leadId: number;
                comment: string;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                xeroReference: string;
                projectEstimate: number;
                xeroTenantId: string;
            }[];
            ProjectConversation: {
                id: number;
                projectId: number;
                message: string;
                userId: number;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
            }[];
            ProjectConversationReadLog: {
                conversationId: number;
                userId: number;
                read: boolean;
            }[];
            ProjectMembers: {
                id: number;
                userId: number;
                projectId: number;
                projectRole: number;
            }[];
            PublicHoliday: {
                id: number;
                title: string;
                date: Date;
                addedById: number;
                addedDate: Date;
            }[];
            QuotationAddedBy: {
                id: number;
                leadId: number;
                scopeOfWork: string;
                file: string;
                type: number;
                status: number;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                paymentTerms: string;
                hasSupervision: boolean;
                supervisionMonthlyCharge: number;
                supervisionPaymentSchedule: number;
                projectId: number;
                expiryDate: Date;
                revisedQuotationReferenceId: number;
                revisionCount: number;
                subTotal: number;
                total: number;
                vatAmount: number;
                xeroReference: string;
                quoteNumber: string;
                brandingThemeId: number;
                issueDate: Date;
                xeroTenantId: string;
                note: string;
            }[];
            QuotationModifiedBy: {
                id: number;
                leadId: number;
                scopeOfWork: string;
                file: string;
                type: number;
                status: number;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                paymentTerms: string;
                hasSupervision: boolean;
                supervisionMonthlyCharge: number;
                supervisionPaymentSchedule: number;
                projectId: number;
                expiryDate: Date;
                revisedQuotationReferenceId: number;
                revisionCount: number;
                subTotal: number;
                total: number;
                vatAmount: number;
                xeroReference: string;
                quoteNumber: string;
                brandingThemeId: number;
                issueDate: Date;
                xeroTenantId: string;
                note: string;
            }[];
            Reimbursement: {
                id: number;
                requestById: number;
                approvedAmount: number;
                purpose: string;
                status: number;
                addedDate: Date;
                claimedAmount: number;
                isDeleted: boolean;
            }[];
            RoleAddedBy: {
                id: number;
                title: string;
                slug: string;
                description: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                level: number;
            }[];
            RoleDeletedBy: {
                id: number;
                title: string;
                slug: string;
                description: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                level: number;
            }[];
            RoleModifiedBy: {
                id: number;
                title: string;
                slug: string;
                description: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                level: number;
            }[];
            RolePermissionsAddedBy: {
                id: number;
                addedDate: Date;
                roleId: number;
                permissionsId: number;
                addedById: number;
            }[];
            Salary: {
                id: number;
                userId: number;
                amount: number;
                startDate: Date;
                endDate: Date;
                isActive: boolean;
                addedDate: Date;
            }[];
            SavedSearches: {
                id: number;
                title: string;
                userId: number;
                filters: Prisma.JsonValue;
                icon: string;
                forAdminpanel: boolean;
                visibility: import(".prisma/client").$Enums.SavedSearchesVisibility;
                organizationId: number;
                isPrivate: boolean;
                addedDate: Date;
                modifiedDate: Date;
                isPublished: boolean;
                isDeleted: boolean;
            }[];
            smsConfiguration: {
                id: number;
                slug: string;
                title: string;
                gateway: string;
                appId: string;
                appPassword: string;
                senderId: string;
                senderIdType: import(".prisma/client").$Enums.SMSType;
                test: boolean;
                priority: number;
                isDefault: boolean;
                isPublished: boolean;
                isDeleted: boolean;
                countryId: number;
                addedDate: Date;
                addedById: number;
            }[];
            staticPageSEO: {
                id: number;
                seoTitle: string;
                seoDescription: string;
                image: string;
                isDefault: number;
                sitePageId: number;
                addedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
            }[];
            Notifications: {
                userId: number;
                notificationId: number;
                modifiedDate: Date;
                read: boolean;
            }[];
            TaskAddedBy: {
                id: number;
                uuid: string;
                title: string;
                priority: number;
                instructions: string;
                taskStartFrom: Date;
                taskEndOn: Date;
                hasExtendedDate: boolean;
                extendedDate: Date;
                reasonOfExtension: string;
                addedById: number;
                closedById: number;
                status: number;
                addedDate: Date;
                isDeleted: boolean;
                order: number;
                projectId: number;
                type: number;
            }[];
            TaskClosedBy: {
                id: number;
                uuid: string;
                title: string;
                priority: number;
                instructions: string;
                taskStartFrom: Date;
                taskEndOn: Date;
                hasExtendedDate: boolean;
                extendedDate: Date;
                reasonOfExtension: string;
                addedById: number;
                closedById: number;
                status: number;
                addedDate: Date;
                isDeleted: boolean;
                order: number;
                projectId: number;
                type: number;
            }[];
            TaskMembers: {
                id: number;
                userId: number;
                taskId: number;
            }[];
            TransactionAddedBy: {
                id: number;
                amount: number;
                transactionDate: Date;
                status: number;
                transactionReference: string;
                addedDate: Date;
                addedById: number;
                projectId: number;
                clientId: number;
                modifiedById: number;
                modifiedDate: Date;
                remarks: string;
                title: string;
                assignedToId: number;
                authorityId: number;
                isDeleted: boolean;
                receipt: string;
                invoiceId: number;
                xeroReference: string;
                recordType: number;
            }[];
            TransactionAssignedTo: {
                id: number;
                amount: number;
                transactionDate: Date;
                status: number;
                transactionReference: string;
                addedDate: Date;
                addedById: number;
                projectId: number;
                clientId: number;
                modifiedById: number;
                modifiedDate: Date;
                remarks: string;
                title: string;
                assignedToId: number;
                authorityId: number;
                isDeleted: boolean;
                receipt: string;
                invoiceId: number;
                xeroReference: string;
                recordType: number;
            }[];
            TransactionModifiedBy: {
                id: number;
                amount: number;
                transactionDate: Date;
                status: number;
                transactionReference: string;
                addedDate: Date;
                addedById: number;
                projectId: number;
                clientId: number;
                modifiedById: number;
                modifiedDate: Date;
                remarks: string;
                title: string;
                assignedToId: number;
                authorityId: number;
                isDeleted: boolean;
                receipt: string;
                invoiceId: number;
                xeroReference: string;
                recordType: number;
            }[];
            AddedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            UserAddedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            }[];
            DeletedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            UserDeletedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            }[];
            Department: {
                id: number;
                title: string;
                slug: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
            };
            Manager: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            Employees: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            }[];
            ModifiedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            UserModifiedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            }[];
            UserAlertsSetting: {
                id: number;
                userId: number;
                alertsTypeId: number;
                desktop: boolean;
                mobile: boolean;
                email: boolean;
                app: boolean;
                addedDate: Date;
                modifiedDate: Date;
            }[];
            UserDocumentAddedBy: {
                id: number;
                title: string;
                file: string;
                documentType: string;
                mimeType: string;
                addedDate: Date;
                userId: number;
                addedById: number;
                isDeleted: boolean;
            }[];
            UserDocuments: {
                id: number;
                title: string;
                file: string;
                documentType: string;
                mimeType: string;
                addedDate: Date;
                userId: number;
                addedById: number;
                isDeleted: boolean;
            }[];
            UserMeta: {
                id: number;
                key: string;
                value: string;
                userId: number;
            }[];
            userRole: {
                id: number;
                userId: number;
                roleId: number;
            }[];
        };
    } & {
        id: number;
        type: number;
        url: string;
        rating: number;
        comment: string;
        addedById: number;
        addedDate: Date;
    }>;
    applyFilters(filters: FeedbackFiltersDto): Prisma.FeedbackWhereInput;
    countRecords(filters: Prisma.FeedbackWhereInput): Prisma.PrismaPromise<number>;
    handleFiles(feedbackId: number, files: Array<Express.Multer.File>): Promise<any[]>;
}
