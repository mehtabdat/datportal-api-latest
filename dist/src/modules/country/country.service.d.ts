import { Prisma } from '@prisma/client';
import { AuthenticatedUser } from 'src/authentication/jwt-payload';
import { PrismaService } from 'src/prisma.service';
import { CreateCountryDto } from './dto/create-country.dto';
import { UpdateCountryDto } from './dto/update-country.dto';
export declare class CountryService {
    private prisma;
    model: any;
    private readonly logger;
    constructor(prisma: PrismaService);
    create(createCountryDto: CreateCountryDto): Promise<{
        id: number;
        name: string;
        isoCode: string;
        vat: number;
        shortName: string;
        displayName: string;
        phoneCode: string;
        flag: string;
        status: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
    }>;
    findAll(user: AuthenticatedUser): Prisma.PrismaPromise<{
        id: number;
        name: string;
        isoCode: string;
        vat: number;
        shortName: string;
        displayName: string;
        phoneCode: string;
        flag: string;
        status: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
    }[]>;
    findAllAvailableCountry(): Prisma.PrismaPromise<{
        id: number;
        name: string;
        isoCode: string;
        vat: number;
        shortName: string;
        displayName: string;
        phoneCode: string;
        flag: string;
        status: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
    }[]>;
    findAvailableCountry(): Prisma.PrismaPromise<{
        id: number;
        name: string;
        isoCode: string;
        vat: number;
        shortName: string;
        displayName: string;
        phoneCode: string;
        flag: string;
        status: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
    }[]>;
    findOne(id: number): Promise<{
        id: number;
        name: string;
        isoCode: string;
        vat: number;
        shortName: string;
        displayName: string;
        phoneCode: string;
        flag: string;
        status: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
    }>;
    update(id: number, updateCountryDto: UpdateCountryDto): Promise<{
        id: number;
        name: string;
        isoCode: string;
        vat: number;
        shortName: string;
        displayName: string;
        phoneCode: string;
        flag: string;
        status: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
    }>;
    remove(id: number, metaData: Prisma.CountryUncheckedUpdateInput): Promise<{
        id: number;
        name: string;
        isoCode: string;
        vat: number;
        shortName: string;
        displayName: string;
        phoneCode: string;
        flag: string;
        status: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
    }>;
    updateResources(resouceId: number, fieldName: string, fieldValue: string | number): Promise<{
        id: number;
        name: string;
        isoCode: string;
        vat: number;
        shortName: string;
        displayName: string;
        phoneCode: string;
        flag: string;
        status: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        deletedDate: Date;
    }>;
}
