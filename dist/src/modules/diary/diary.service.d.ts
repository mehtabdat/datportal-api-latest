import { Prisma, User } from '@prisma/client';
import { Pagination } from 'src/common-types/common-types';
import { PrismaService } from 'src/prisma.service';
import { CreateDiaryDto } from './dto/create-diary.dto';
import { UpdateDiaryDto } from './dto/update-diary.dto';
import { DiaryFilters } from './dto/diary-filters.dto';
import { AuthenticatedUser } from 'src/authentication/jwt-payload';
export declare class DiaryService {
    private prisma;
    private readonly logger;
    constructor(prisma: PrismaService);
    create(createDto: CreateDiaryDto): Promise<{
        id: number;
        remarks: string;
        noOfHours: number;
        projectId: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        userId: number;
        taskTypeId: number;
    }>;
    findAll(filters: Prisma.DailyRoutineWhereInput, pagination: Pagination): Promise<({
        User: {
            id: number;
            email: string;
            uuid: string;
            firstName: string;
            lastName: string;
            profile: string;
        };
        Project: {
            id: number;
            isDeleted: boolean;
            addedDate: Date;
            modifiedDate: Date;
            deletedDate: Date;
            _count: {
                CarReservationRequest: number;
                dailyRoutine: number;
                Resources: number;
                FileshareLogs: number;
                Invoice: number;
                Permits: number;
                AddedBy: number;
                Client: number;
                DeletedBy: number;
                Lead: number;
                ModifiedBy: number;
                ProjectHoldBy: number;
                ProjectState: number;
                ProjectType: number;
                SubmissionBy: number;
                ProjectClient: number;
                ProjectConversation: number;
                ProjectMembers: number;
                Quotation: number;
                Task: number;
                Transactions: number;
                ProjectEnableStates: number;
            };
            title: string;
            xeroReference: string;
            xeroTenantId: string;
            slug: string;
            addedById: number;
            deletedById: number;
            modifiedById: number;
            CarReservationRequest: {
                id: number;
                requestById: number;
                projectId: number;
                companyCarId: number;
                status: number;
                addedDate: Date;
                fromDate: Date;
                purpose: string;
                toDate: Date;
            }[];
            FileshareLogs: {
                id: number;
                clientId: number;
                sharedById: number;
                addedDate: Date;
                projectId: number;
                fileId: number;
                batchNumber: number;
            }[];
            ProjectHoldBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            ProjectConversation: {
                id: number;
                projectId: number;
                message: string;
                userId: number;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
            }[];
            ProjectMembers: {
                id: number;
                userId: number;
                projectId: number;
                projectRole: number;
            }[];
            AddedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            DeletedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            ModifiedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            dailyRoutine: {
                id: number;
                remarks: string;
                noOfHours: number;
                projectId: number;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                userId: number;
                taskTypeId: number;
            }[];
            startDate: Date;
            endDate: Date;
            Invoice: {
                id: number;
                title: string;
                message: string;
                projectId: number;
                vatAmount: number;
                total: number;
                status: number;
                file: string;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                clientId: number;
                type: number;
                hasSupervisionCharge: boolean;
                quotationId: number;
                balance: number;
                subTotal: number;
                xeroReference: string;
                invoiceNumber: string;
                expiryDate: Date;
                issueDate: Date;
                xeroTenantId: string;
            }[];
            Quotation: {
                id: number;
                leadId: number;
                scopeOfWork: string;
                file: string;
                type: number;
                status: number;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                paymentTerms: string;
                hasSupervision: boolean;
                supervisionMonthlyCharge: number;
                supervisionPaymentSchedule: number;
                projectId: number;
                expiryDate: Date;
                revisedQuotationReferenceId: number;
                revisionCount: number;
                subTotal: number;
                total: number;
                vatAmount: number;
                xeroReference: string;
                quoteNumber: string;
                brandingThemeId: number;
                issueDate: Date;
                xeroTenantId: string;
                note: string;
            }[];
            comment: string;
            Client: {
                id: number;
                uuid: string;
                name: string;
                type: number;
                designation: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                companyId: number;
                addedById: number;
                addedDate: Date;
                deletedById: number;
                deletedDate: Date;
                isDeleted: boolean;
                modifiedById: number;
                modifiedDate: Date;
                taxRegistrationNumber: string;
            };
            Permits: {
                id: number;
                clientId: number;
                projectId: number;
                authorityId: number;
                title: string;
                remarks: string;
                financeStatus: number;
                clientStatus: number;
                approvedDate: Date;
                expiryDate: Date;
                addedDate: Date;
                modifiedDate: Date;
                isDeleted: boolean;
                addedById: number;
                modifiedById: number;
            }[];
            ProjectClient: {
                id: number;
                clientId: number;
                projectId: number;
                isRepresentative: boolean;
            }[];
            Transactions: {
                id: number;
                amount: number;
                transactionDate: Date;
                status: number;
                transactionReference: string;
                addedDate: Date;
                addedById: number;
                projectId: number;
                clientId: number;
                modifiedById: number;
                modifiedDate: Date;
                remarks: string;
                title: string;
                assignedToId: number;
                authorityId: number;
                isDeleted: boolean;
                receipt: string;
                invoiceId: number;
                xeroReference: string;
                recordType: number;
            }[];
            projectTypeId: number;
            ProjectType: {
                id: number;
                title: string;
                slug: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
            };
            Task: {
                id: number;
                uuid: string;
                title: string;
                priority: number;
                instructions: string;
                taskStartFrom: Date;
                taskEndOn: Date;
                hasExtendedDate: boolean;
                extendedDate: Date;
                reasonOfExtension: string;
                addedById: number;
                closedById: number;
                status: number;
                addedDate: Date;
                isDeleted: boolean;
                order: number;
                projectId: number;
                type: number;
            }[];
            clientId: number;
            leadId: number;
            Lead: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            };
            submissionById: number;
            SubmissionBy: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            };
            Resources: {
                id: number;
                uuid: string;
                documentType: string;
                title: string;
                file: string;
                fileType: string;
                name: string;
                path: string;
                description: string;
                order: number;
                comments: string;
                visibility: import(".prisma/client").$Enums.FileVisibility;
                projectId: number;
                taskId: number;
                isTemp: boolean;
                status: number;
                isDeleted: boolean;
                isDefault: boolean;
                isProcessing: boolean;
                backgroundId: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                projectConversationId: number;
                permitId: number;
                fileSize: number;
            }[];
            instructions: string;
            projectFilesLink: string;
            priority: number;
            isExtended: boolean;
            reasonOfExtension: string;
            projectStateId: number;
            isClosed: boolean;
            onHold: boolean;
            referenceNumber: string;
            projectHoldById: number;
            projectEstimate: number;
            ProjectState: {
                id: number;
                title: string;
                slug: string;
                shouldCloseProject: boolean;
                order: number;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                isDefault: boolean;
                bgColor: string;
                textColor: string;
            };
            ProjectEnableStates: {
                id: number;
                pId: number;
                pstateId: number;
            }[];
        };
        TaskType: {
            id: number;
            title: string;
            slug: string;
        };
    } & {
        id: number;
        remarks: string;
        noOfHours: number;
        projectId: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        userId: number;
        taskTypeId: number;
    })[]>;
    findOne(id: number): Promise<{
        User: {
            id: number;
            email: string;
            uuid: string;
            firstName: string;
            lastName: string;
            profile: string;
        };
        Project: {
            id: number;
            isDeleted: boolean;
            addedDate: Date;
            modifiedDate: Date;
            deletedDate: Date;
            _count: {
                CarReservationRequest: number;
                dailyRoutine: number;
                Resources: number;
                FileshareLogs: number;
                Invoice: number;
                Permits: number;
                AddedBy: number;
                Client: number;
                DeletedBy: number;
                Lead: number;
                ModifiedBy: number;
                ProjectHoldBy: number;
                ProjectState: number;
                ProjectType: number;
                SubmissionBy: number;
                ProjectClient: number;
                ProjectConversation: number;
                ProjectMembers: number;
                Quotation: number;
                Task: number;
                Transactions: number;
                ProjectEnableStates: number;
            };
            title: string;
            xeroReference: string;
            xeroTenantId: string;
            slug: string;
            addedById: number;
            deletedById: number;
            modifiedById: number;
            CarReservationRequest: {
                id: number;
                requestById: number;
                projectId: number;
                companyCarId: number;
                status: number;
                addedDate: Date;
                fromDate: Date;
                purpose: string;
                toDate: Date;
            }[];
            FileshareLogs: {
                id: number;
                clientId: number;
                sharedById: number;
                addedDate: Date;
                projectId: number;
                fileId: number;
                batchNumber: number;
            }[];
            ProjectHoldBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            ProjectConversation: {
                id: number;
                projectId: number;
                message: string;
                userId: number;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
            }[];
            ProjectMembers: {
                id: number;
                userId: number;
                projectId: number;
                projectRole: number;
            }[];
            AddedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            DeletedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            ModifiedBy: {
                id: number;
                uuid: string;
                firstName: string;
                lastName: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                preferences: string;
                phoneVerified: boolean;
                emailVerified: boolean;
                password: string;
                profile: string;
                isAvatar: boolean;
                resetToken: string;
                resetTokenValidity: Date;
                status: number;
                userSignupSource: string;
                userSignupDeviceAgent: string;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                organizationId: number;
                departmentId: number;
                managerId: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                designation: string;
                dateOfJoining: Date;
                lastWorkingDate: Date;
                remainingAnnualLeaves: number;
                enableRemoteCheckin: boolean;
                dataAccessRestrictedTo: number[];
            };
            dailyRoutine: {
                id: number;
                remarks: string;
                noOfHours: number;
                projectId: number;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                userId: number;
                taskTypeId: number;
            }[];
            startDate: Date;
            endDate: Date;
            Invoice: {
                id: number;
                title: string;
                message: string;
                projectId: number;
                vatAmount: number;
                total: number;
                status: number;
                file: string;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                clientId: number;
                type: number;
                hasSupervisionCharge: boolean;
                quotationId: number;
                balance: number;
                subTotal: number;
                xeroReference: string;
                invoiceNumber: string;
                expiryDate: Date;
                issueDate: Date;
                xeroTenantId: string;
            }[];
            Quotation: {
                id: number;
                leadId: number;
                scopeOfWork: string;
                file: string;
                type: number;
                status: number;
                isDeleted: boolean;
                addedDate: Date;
                sentDate: Date;
                modifiedDate: Date;
                addedById: number;
                modifiedById: number;
                paymentTerms: string;
                hasSupervision: boolean;
                supervisionMonthlyCharge: number;
                supervisionPaymentSchedule: number;
                projectId: number;
                expiryDate: Date;
                revisedQuotationReferenceId: number;
                revisionCount: number;
                subTotal: number;
                total: number;
                vatAmount: number;
                xeroReference: string;
                quoteNumber: string;
                brandingThemeId: number;
                issueDate: Date;
                xeroTenantId: string;
                note: string;
            }[];
            comment: string;
            Client: {
                id: number;
                uuid: string;
                name: string;
                type: number;
                designation: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                email: string;
                address: string;
                companyId: number;
                addedById: number;
                addedDate: Date;
                deletedById: number;
                deletedDate: Date;
                isDeleted: boolean;
                modifiedById: number;
                modifiedDate: Date;
                taxRegistrationNumber: string;
            };
            Permits: {
                id: number;
                clientId: number;
                projectId: number;
                authorityId: number;
                title: string;
                remarks: string;
                financeStatus: number;
                clientStatus: number;
                approvedDate: Date;
                expiryDate: Date;
                addedDate: Date;
                modifiedDate: Date;
                isDeleted: boolean;
                addedById: number;
                modifiedById: number;
            }[];
            ProjectClient: {
                id: number;
                clientId: number;
                projectId: number;
                isRepresentative: boolean;
            }[];
            Transactions: {
                id: number;
                amount: number;
                transactionDate: Date;
                status: number;
                transactionReference: string;
                addedDate: Date;
                addedById: number;
                projectId: number;
                clientId: number;
                modifiedById: number;
                modifiedDate: Date;
                remarks: string;
                title: string;
                assignedToId: number;
                authorityId: number;
                isDeleted: boolean;
                receipt: string;
                invoiceId: number;
                xeroReference: string;
                recordType: number;
            }[];
            projectTypeId: number;
            ProjectType: {
                id: number;
                title: string;
                slug: string;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
            };
            Task: {
                id: number;
                uuid: string;
                title: string;
                priority: number;
                instructions: string;
                taskStartFrom: Date;
                taskEndOn: Date;
                hasExtendedDate: boolean;
                extendedDate: Date;
                reasonOfExtension: string;
                addedById: number;
                closedById: number;
                status: number;
                addedDate: Date;
                isDeleted: boolean;
                order: number;
                projectId: number;
                type: number;
            }[];
            clientId: number;
            leadId: number;
            Lead: {
                id: number;
                uuid: string;
                message: string;
                status: number;
                addedDate: Date;
                repliedDate: Date;
                modifiedDate: Date;
                modifiedById: number;
                addedById: number;
                clientId: number;
                projectTypeId: number;
                representativeId: number;
                enquiryId: number;
                assignedById: number;
                assignedToId: number;
                isDeleted: boolean;
                submissionById: number;
                dueDateForSubmissions: Date;
                xeroTenantId: string;
            };
            submissionById: number;
            SubmissionBy: {
                id: number;
                uuid: string;
                name: string;
                description: string;
                email: string;
                phone: string;
                phoneCode: string;
                whatsapp: string;
                address: string;
                locationMap: string;
                logo: string;
                countryId: number;
                city: string;
                status: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                isDeleted: boolean;
                isPublished: boolean;
                type: number;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                parentId: number;
                taxRegistrationNumber: string;
                bankAccountHolderName: string;
                bankAccountNumber: string;
                bankIBAN: string;
                bankName: string;
                bankSwiftCode: string;
                organizationCode: string;
                workingHoursId: number;
                digitalStamp: string;
            };
            Resources: {
                id: number;
                uuid: string;
                documentType: string;
                title: string;
                file: string;
                fileType: string;
                name: string;
                path: string;
                description: string;
                order: number;
                comments: string;
                visibility: import(".prisma/client").$Enums.FileVisibility;
                projectId: number;
                taskId: number;
                isTemp: boolean;
                status: number;
                isDeleted: boolean;
                isDefault: boolean;
                isProcessing: boolean;
                backgroundId: number;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                projectConversationId: number;
                permitId: number;
                fileSize: number;
            }[];
            instructions: string;
            projectFilesLink: string;
            priority: number;
            isExtended: boolean;
            reasonOfExtension: string;
            projectStateId: number;
            isClosed: boolean;
            onHold: boolean;
            referenceNumber: string;
            projectHoldById: number;
            projectEstimate: number;
            ProjectState: {
                id: number;
                title: string;
                slug: string;
                shouldCloseProject: boolean;
                order: number;
                isPublished: boolean;
                isDeleted: boolean;
                addedDate: Date;
                isDefault: boolean;
                bgColor: string;
                textColor: string;
            };
            ProjectEnableStates: {
                id: number;
                pId: number;
                pstateId: number;
            }[];
        };
        TaskType: {
            id: number;
            title: string;
            slug: string;
        };
    } & {
        id: number;
        remarks: string;
        noOfHours: number;
        projectId: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        userId: number;
        taskTypeId: number;
    }>;
    update(id: number, updateDto: UpdateDiaryDto): Promise<{
        id: number;
        remarks: string;
        noOfHours: number;
        projectId: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        userId: number;
        taskTypeId: number;
    }>;
    remove(id: number): Promise<{
        id: number;
        remarks: string;
        noOfHours: number;
        projectId: number;
        isPublished: boolean;
        isDeleted: boolean;
        addedDate: Date;
        modifiedDate: Date;
        userId: number;
        taskTypeId: number;
    }>;
    applyFilters(filters: DiaryFilters): Prisma.DailyRoutineWhereInput;
    countRecords(filters: Prisma.DailyRoutineWhereInput): Prisma.PrismaPromise<number>;
    findEmployeesUnderUser<T>(user: AuthenticatedUser): Promise<Partial<User>[]>;
    findUserReport1(users: Partial<User>[]): Prisma.GetDailyRoutineGroupByPayload<{
        by: ("addedDate" | "userId")[];
        where: {
            userId: {
                in: number[];
            };
        };
    }>;
    findUserReport(filters: Prisma.DailyRoutineWhereInput, pagination: Pagination, users: Partial<User>[]): Promise<{
        id: number;
        email: string;
        uuid: string;
        firstName: string;
        lastName: string;
        profile: string;
        DailyRoutine: ({
            Project: {
                id: number;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                _count: {
                    CarReservationRequest: number;
                    dailyRoutine: number;
                    Resources: number;
                    FileshareLogs: number;
                    Invoice: number;
                    Permits: number;
                    AddedBy: number;
                    Client: number;
                    DeletedBy: number;
                    Lead: number;
                    ModifiedBy: number;
                    ProjectHoldBy: number;
                    ProjectState: number;
                    ProjectType: number;
                    SubmissionBy: number;
                    ProjectClient: number;
                    ProjectConversation: number;
                    ProjectMembers: number;
                    Quotation: number;
                    Task: number;
                    Transactions: number;
                    ProjectEnableStates: number;
                };
                title: string;
                xeroReference: string;
                xeroTenantId: string;
                slug: string;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                CarReservationRequest: {
                    id: number;
                    requestById: number;
                    projectId: number;
                    companyCarId: number;
                    status: number;
                    addedDate: Date;
                    fromDate: Date;
                    purpose: string;
                    toDate: Date;
                }[];
                FileshareLogs: {
                    id: number;
                    clientId: number;
                    sharedById: number;
                    addedDate: Date;
                    projectId: number;
                    fileId: number;
                    batchNumber: number;
                }[];
                ProjectHoldBy: {
                    id: number;
                    uuid: string;
                    firstName: string;
                    lastName: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    preferences: string;
                    phoneVerified: boolean;
                    emailVerified: boolean;
                    password: string;
                    profile: string;
                    isAvatar: boolean;
                    resetToken: string;
                    resetTokenValidity: Date;
                    status: number;
                    userSignupSource: string;
                    userSignupDeviceAgent: string;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    organizationId: number;
                    departmentId: number;
                    managerId: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    designation: string;
                    dateOfJoining: Date;
                    lastWorkingDate: Date;
                    remainingAnnualLeaves: number;
                    enableRemoteCheckin: boolean;
                    dataAccessRestrictedTo: number[];
                };
                ProjectConversation: {
                    id: number;
                    projectId: number;
                    message: string;
                    userId: number;
                    isDeleted: boolean;
                    addedDate: Date;
                    modifiedDate: Date;
                }[];
                ProjectMembers: {
                    id: number;
                    userId: number;
                    projectId: number;
                    projectRole: number;
                }[];
                AddedBy: {
                    id: number;
                    uuid: string;
                    firstName: string;
                    lastName: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    preferences: string;
                    phoneVerified: boolean;
                    emailVerified: boolean;
                    password: string;
                    profile: string;
                    isAvatar: boolean;
                    resetToken: string;
                    resetTokenValidity: Date;
                    status: number;
                    userSignupSource: string;
                    userSignupDeviceAgent: string;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    organizationId: number;
                    departmentId: number;
                    managerId: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    designation: string;
                    dateOfJoining: Date;
                    lastWorkingDate: Date;
                    remainingAnnualLeaves: number;
                    enableRemoteCheckin: boolean;
                    dataAccessRestrictedTo: number[];
                };
                DeletedBy: {
                    id: number;
                    uuid: string;
                    firstName: string;
                    lastName: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    preferences: string;
                    phoneVerified: boolean;
                    emailVerified: boolean;
                    password: string;
                    profile: string;
                    isAvatar: boolean;
                    resetToken: string;
                    resetTokenValidity: Date;
                    status: number;
                    userSignupSource: string;
                    userSignupDeviceAgent: string;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    organizationId: number;
                    departmentId: number;
                    managerId: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    designation: string;
                    dateOfJoining: Date;
                    lastWorkingDate: Date;
                    remainingAnnualLeaves: number;
                    enableRemoteCheckin: boolean;
                    dataAccessRestrictedTo: number[];
                };
                ModifiedBy: {
                    id: number;
                    uuid: string;
                    firstName: string;
                    lastName: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    preferences: string;
                    phoneVerified: boolean;
                    emailVerified: boolean;
                    password: string;
                    profile: string;
                    isAvatar: boolean;
                    resetToken: string;
                    resetTokenValidity: Date;
                    status: number;
                    userSignupSource: string;
                    userSignupDeviceAgent: string;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    organizationId: number;
                    departmentId: number;
                    managerId: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    designation: string;
                    dateOfJoining: Date;
                    lastWorkingDate: Date;
                    remainingAnnualLeaves: number;
                    enableRemoteCheckin: boolean;
                    dataAccessRestrictedTo: number[];
                };
                dailyRoutine: {
                    id: number;
                    remarks: string;
                    noOfHours: number;
                    projectId: number;
                    isPublished: boolean;
                    isDeleted: boolean;
                    addedDate: Date;
                    modifiedDate: Date;
                    userId: number;
                    taskTypeId: number;
                }[];
                startDate: Date;
                endDate: Date;
                Invoice: {
                    id: number;
                    title: string;
                    message: string;
                    projectId: number;
                    vatAmount: number;
                    total: number;
                    status: number;
                    file: string;
                    isDeleted: boolean;
                    addedDate: Date;
                    sentDate: Date;
                    modifiedDate: Date;
                    addedById: number;
                    modifiedById: number;
                    clientId: number;
                    type: number;
                    hasSupervisionCharge: boolean;
                    quotationId: number;
                    balance: number;
                    subTotal: number;
                    xeroReference: string;
                    invoiceNumber: string;
                    expiryDate: Date;
                    issueDate: Date;
                    xeroTenantId: string;
                }[];
                Quotation: {
                    id: number;
                    leadId: number;
                    scopeOfWork: string;
                    file: string;
                    type: number;
                    status: number;
                    isDeleted: boolean;
                    addedDate: Date;
                    sentDate: Date;
                    modifiedDate: Date;
                    addedById: number;
                    modifiedById: number;
                    paymentTerms: string;
                    hasSupervision: boolean;
                    supervisionMonthlyCharge: number;
                    supervisionPaymentSchedule: number;
                    projectId: number;
                    expiryDate: Date;
                    revisedQuotationReferenceId: number;
                    revisionCount: number;
                    subTotal: number;
                    total: number;
                    vatAmount: number;
                    xeroReference: string;
                    quoteNumber: string;
                    brandingThemeId: number;
                    issueDate: Date;
                    xeroTenantId: string;
                    note: string;
                }[];
                comment: string;
                Client: {
                    id: number;
                    uuid: string;
                    name: string;
                    type: number;
                    designation: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    companyId: number;
                    addedById: number;
                    addedDate: Date;
                    deletedById: number;
                    deletedDate: Date;
                    isDeleted: boolean;
                    modifiedById: number;
                    modifiedDate: Date;
                    taxRegistrationNumber: string;
                };
                Permits: {
                    id: number;
                    clientId: number;
                    projectId: number;
                    authorityId: number;
                    title: string;
                    remarks: string;
                    financeStatus: number;
                    clientStatus: number;
                    approvedDate: Date;
                    expiryDate: Date;
                    addedDate: Date;
                    modifiedDate: Date;
                    isDeleted: boolean;
                    addedById: number;
                    modifiedById: number;
                }[];
                ProjectClient: {
                    id: number;
                    clientId: number;
                    projectId: number;
                    isRepresentative: boolean;
                }[];
                Transactions: {
                    id: number;
                    amount: number;
                    transactionDate: Date;
                    status: number;
                    transactionReference: string;
                    addedDate: Date;
                    addedById: number;
                    projectId: number;
                    clientId: number;
                    modifiedById: number;
                    modifiedDate: Date;
                    remarks: string;
                    title: string;
                    assignedToId: number;
                    authorityId: number;
                    isDeleted: boolean;
                    receipt: string;
                    invoiceId: number;
                    xeroReference: string;
                    recordType: number;
                }[];
                projectTypeId: number;
                ProjectType: {
                    id: number;
                    title: string;
                    slug: string;
                    isPublished: boolean;
                    isDeleted: boolean;
                    addedDate: Date;
                };
                Task: {
                    id: number;
                    uuid: string;
                    title: string;
                    priority: number;
                    instructions: string;
                    taskStartFrom: Date;
                    taskEndOn: Date;
                    hasExtendedDate: boolean;
                    extendedDate: Date;
                    reasonOfExtension: string;
                    addedById: number;
                    closedById: number;
                    status: number;
                    addedDate: Date;
                    isDeleted: boolean;
                    order: number;
                    projectId: number;
                    type: number;
                }[];
                clientId: number;
                leadId: number;
                Lead: {
                    id: number;
                    uuid: string;
                    message: string;
                    status: number;
                    addedDate: Date;
                    repliedDate: Date;
                    modifiedDate: Date;
                    modifiedById: number;
                    addedById: number;
                    clientId: number;
                    projectTypeId: number;
                    representativeId: number;
                    enquiryId: number;
                    assignedById: number;
                    assignedToId: number;
                    isDeleted: boolean;
                    submissionById: number;
                    dueDateForSubmissions: Date;
                    xeroTenantId: string;
                };
                submissionById: number;
                SubmissionBy: {
                    id: number;
                    uuid: string;
                    name: string;
                    description: string;
                    email: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    address: string;
                    locationMap: string;
                    logo: string;
                    countryId: number;
                    city: string;
                    status: number;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    type: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    parentId: number;
                    taxRegistrationNumber: string;
                    bankAccountHolderName: string;
                    bankAccountNumber: string;
                    bankIBAN: string;
                    bankName: string;
                    bankSwiftCode: string;
                    organizationCode: string;
                    workingHoursId: number;
                    digitalStamp: string;
                };
                Resources: {
                    id: number;
                    uuid: string;
                    documentType: string;
                    title: string;
                    file: string;
                    fileType: string;
                    name: string;
                    path: string;
                    description: string;
                    order: number;
                    comments: string;
                    visibility: import(".prisma/client").$Enums.FileVisibility;
                    projectId: number;
                    taskId: number;
                    isTemp: boolean;
                    status: number;
                    isDeleted: boolean;
                    isDefault: boolean;
                    isProcessing: boolean;
                    backgroundId: number;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    projectConversationId: number;
                    permitId: number;
                    fileSize: number;
                }[];
                instructions: string;
                projectFilesLink: string;
                priority: number;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isClosed: boolean;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                projectEstimate: number;
                ProjectState: {
                    id: number;
                    title: string;
                    slug: string;
                    shouldCloseProject: boolean;
                    order: number;
                    isPublished: boolean;
                    isDeleted: boolean;
                    addedDate: Date;
                    isDefault: boolean;
                    bgColor: string;
                    textColor: string;
                };
                ProjectEnableStates: {
                    id: number;
                    pId: number;
                    pstateId: number;
                }[];
            };
            TaskType: {
                id: number;
                title: string;
                slug: string;
            };
        } & {
            id: number;
            remarks: string;
            noOfHours: number;
            projectId: number;
            isPublished: boolean;
            isDeleted: boolean;
            addedDate: Date;
            modifiedDate: Date;
            userId: number;
            taskTypeId: number;
        })[];
    }[]>;
    findUserReportByUserId(userId: number, filters: Prisma.DailyRoutineWhereInput): Promise<{
        totalHours: number;
        dailyRoutine: {
            date: any;
            routines: any;
        }[];
        id: number;
        email: string;
        uuid: string;
        firstName: string;
        lastName: string;
        profile: string;
        DailyRoutine: {
            addedDate: Date;
            Project: {
                id: number;
                isDeleted: boolean;
                addedDate: Date;
                modifiedDate: Date;
                deletedDate: Date;
                _count: {
                    CarReservationRequest: number;
                    dailyRoutine: number;
                    Resources: number;
                    FileshareLogs: number;
                    Invoice: number;
                    Permits: number;
                    AddedBy: number;
                    Client: number;
                    DeletedBy: number;
                    Lead: number;
                    ModifiedBy: number;
                    ProjectHoldBy: number;
                    ProjectState: number;
                    ProjectType: number;
                    SubmissionBy: number;
                    ProjectClient: number;
                    ProjectConversation: number;
                    ProjectMembers: number;
                    Quotation: number;
                    Task: number;
                    Transactions: number;
                    ProjectEnableStates: number;
                };
                title: string;
                xeroReference: string;
                xeroTenantId: string;
                slug: string;
                addedById: number;
                deletedById: number;
                modifiedById: number;
                CarReservationRequest: {
                    id: number;
                    requestById: number;
                    projectId: number;
                    companyCarId: number;
                    status: number;
                    addedDate: Date;
                    fromDate: Date;
                    purpose: string;
                    toDate: Date;
                }[];
                FileshareLogs: {
                    id: number;
                    clientId: number;
                    sharedById: number;
                    addedDate: Date;
                    projectId: number;
                    fileId: number;
                    batchNumber: number;
                }[];
                ProjectHoldBy: {
                    id: number;
                    uuid: string;
                    firstName: string;
                    lastName: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    preferences: string;
                    phoneVerified: boolean;
                    emailVerified: boolean;
                    password: string;
                    profile: string;
                    isAvatar: boolean;
                    resetToken: string;
                    resetTokenValidity: Date;
                    status: number;
                    userSignupSource: string;
                    userSignupDeviceAgent: string;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    organizationId: number;
                    departmentId: number;
                    managerId: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    designation: string;
                    dateOfJoining: Date;
                    lastWorkingDate: Date;
                    remainingAnnualLeaves: number;
                    enableRemoteCheckin: boolean;
                    dataAccessRestrictedTo: number[];
                };
                ProjectConversation: {
                    id: number;
                    projectId: number;
                    message: string;
                    userId: number;
                    isDeleted: boolean;
                    addedDate: Date;
                    modifiedDate: Date;
                }[];
                ProjectMembers: {
                    id: number;
                    userId: number;
                    projectId: number;
                    projectRole: number;
                }[];
                AddedBy: {
                    id: number;
                    uuid: string;
                    firstName: string;
                    lastName: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    preferences: string;
                    phoneVerified: boolean;
                    emailVerified: boolean;
                    password: string;
                    profile: string;
                    isAvatar: boolean;
                    resetToken: string;
                    resetTokenValidity: Date;
                    status: number;
                    userSignupSource: string;
                    userSignupDeviceAgent: string;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    organizationId: number;
                    departmentId: number;
                    managerId: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    designation: string;
                    dateOfJoining: Date;
                    lastWorkingDate: Date;
                    remainingAnnualLeaves: number;
                    enableRemoteCheckin: boolean;
                    dataAccessRestrictedTo: number[];
                };
                DeletedBy: {
                    id: number;
                    uuid: string;
                    firstName: string;
                    lastName: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    preferences: string;
                    phoneVerified: boolean;
                    emailVerified: boolean;
                    password: string;
                    profile: string;
                    isAvatar: boolean;
                    resetToken: string;
                    resetTokenValidity: Date;
                    status: number;
                    userSignupSource: string;
                    userSignupDeviceAgent: string;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    organizationId: number;
                    departmentId: number;
                    managerId: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    designation: string;
                    dateOfJoining: Date;
                    lastWorkingDate: Date;
                    remainingAnnualLeaves: number;
                    enableRemoteCheckin: boolean;
                    dataAccessRestrictedTo: number[];
                };
                ModifiedBy: {
                    id: number;
                    uuid: string;
                    firstName: string;
                    lastName: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    preferences: string;
                    phoneVerified: boolean;
                    emailVerified: boolean;
                    password: string;
                    profile: string;
                    isAvatar: boolean;
                    resetToken: string;
                    resetTokenValidity: Date;
                    status: number;
                    userSignupSource: string;
                    userSignupDeviceAgent: string;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    organizationId: number;
                    departmentId: number;
                    managerId: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    designation: string;
                    dateOfJoining: Date;
                    lastWorkingDate: Date;
                    remainingAnnualLeaves: number;
                    enableRemoteCheckin: boolean;
                    dataAccessRestrictedTo: number[];
                };
                dailyRoutine: {
                    id: number;
                    remarks: string;
                    noOfHours: number;
                    projectId: number;
                    isPublished: boolean;
                    isDeleted: boolean;
                    addedDate: Date;
                    modifiedDate: Date;
                    userId: number;
                    taskTypeId: number;
                }[];
                startDate: Date;
                endDate: Date;
                Invoice: {
                    id: number;
                    title: string;
                    message: string;
                    projectId: number;
                    vatAmount: number;
                    total: number;
                    status: number;
                    file: string;
                    isDeleted: boolean;
                    addedDate: Date;
                    sentDate: Date;
                    modifiedDate: Date;
                    addedById: number;
                    modifiedById: number;
                    clientId: number;
                    type: number;
                    hasSupervisionCharge: boolean;
                    quotationId: number;
                    balance: number;
                    subTotal: number;
                    xeroReference: string;
                    invoiceNumber: string;
                    expiryDate: Date;
                    issueDate: Date;
                    xeroTenantId: string;
                }[];
                Quotation: {
                    id: number;
                    leadId: number;
                    scopeOfWork: string;
                    file: string;
                    type: number;
                    status: number;
                    isDeleted: boolean;
                    addedDate: Date;
                    sentDate: Date;
                    modifiedDate: Date;
                    addedById: number;
                    modifiedById: number;
                    paymentTerms: string;
                    hasSupervision: boolean;
                    supervisionMonthlyCharge: number;
                    supervisionPaymentSchedule: number;
                    projectId: number;
                    expiryDate: Date;
                    revisedQuotationReferenceId: number;
                    revisionCount: number;
                    subTotal: number;
                    total: number;
                    vatAmount: number;
                    xeroReference: string;
                    quoteNumber: string;
                    brandingThemeId: number;
                    issueDate: Date;
                    xeroTenantId: string;
                    note: string;
                }[];
                comment: string;
                Client: {
                    id: number;
                    uuid: string;
                    name: string;
                    type: number;
                    designation: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    email: string;
                    address: string;
                    companyId: number;
                    addedById: number;
                    addedDate: Date;
                    deletedById: number;
                    deletedDate: Date;
                    isDeleted: boolean;
                    modifiedById: number;
                    modifiedDate: Date;
                    taxRegistrationNumber: string;
                };
                Permits: {
                    id: number;
                    clientId: number;
                    projectId: number;
                    authorityId: number;
                    title: string;
                    remarks: string;
                    financeStatus: number;
                    clientStatus: number;
                    approvedDate: Date;
                    expiryDate: Date;
                    addedDate: Date;
                    modifiedDate: Date;
                    isDeleted: boolean;
                    addedById: number;
                    modifiedById: number;
                }[];
                ProjectClient: {
                    id: number;
                    clientId: number;
                    projectId: number;
                    isRepresentative: boolean;
                }[];
                Transactions: {
                    id: number;
                    amount: number;
                    transactionDate: Date;
                    status: number;
                    transactionReference: string;
                    addedDate: Date;
                    addedById: number;
                    projectId: number;
                    clientId: number;
                    modifiedById: number;
                    modifiedDate: Date;
                    remarks: string;
                    title: string;
                    assignedToId: number;
                    authorityId: number;
                    isDeleted: boolean;
                    receipt: string;
                    invoiceId: number;
                    xeroReference: string;
                    recordType: number;
                }[];
                projectTypeId: number;
                ProjectType: {
                    id: number;
                    title: string;
                    slug: string;
                    isPublished: boolean;
                    isDeleted: boolean;
                    addedDate: Date;
                };
                Task: {
                    id: number;
                    uuid: string;
                    title: string;
                    priority: number;
                    instructions: string;
                    taskStartFrom: Date;
                    taskEndOn: Date;
                    hasExtendedDate: boolean;
                    extendedDate: Date;
                    reasonOfExtension: string;
                    addedById: number;
                    closedById: number;
                    status: number;
                    addedDate: Date;
                    isDeleted: boolean;
                    order: number;
                    projectId: number;
                    type: number;
                }[];
                clientId: number;
                leadId: number;
                Lead: {
                    id: number;
                    uuid: string;
                    message: string;
                    status: number;
                    addedDate: Date;
                    repliedDate: Date;
                    modifiedDate: Date;
                    modifiedById: number;
                    addedById: number;
                    clientId: number;
                    projectTypeId: number;
                    representativeId: number;
                    enquiryId: number;
                    assignedById: number;
                    assignedToId: number;
                    isDeleted: boolean;
                    submissionById: number;
                    dueDateForSubmissions: Date;
                    xeroTenantId: string;
                };
                submissionById: number;
                SubmissionBy: {
                    id: number;
                    uuid: string;
                    name: string;
                    description: string;
                    email: string;
                    phone: string;
                    phoneCode: string;
                    whatsapp: string;
                    address: string;
                    locationMap: string;
                    logo: string;
                    countryId: number;
                    city: string;
                    status: number;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    isDeleted: boolean;
                    isPublished: boolean;
                    type: number;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    parentId: number;
                    taxRegistrationNumber: string;
                    bankAccountHolderName: string;
                    bankAccountNumber: string;
                    bankIBAN: string;
                    bankName: string;
                    bankSwiftCode: string;
                    organizationCode: string;
                    workingHoursId: number;
                    digitalStamp: string;
                };
                Resources: {
                    id: number;
                    uuid: string;
                    documentType: string;
                    title: string;
                    file: string;
                    fileType: string;
                    name: string;
                    path: string;
                    description: string;
                    order: number;
                    comments: string;
                    visibility: import(".prisma/client").$Enums.FileVisibility;
                    projectId: number;
                    taskId: number;
                    isTemp: boolean;
                    status: number;
                    isDeleted: boolean;
                    isDefault: boolean;
                    isProcessing: boolean;
                    backgroundId: number;
                    addedDate: Date;
                    modifiedDate: Date;
                    deletedDate: Date;
                    addedById: number;
                    deletedById: number;
                    modifiedById: number;
                    projectConversationId: number;
                    permitId: number;
                    fileSize: number;
                }[];
                instructions: string;
                projectFilesLink: string;
                priority: number;
                isExtended: boolean;
                reasonOfExtension: string;
                projectStateId: number;
                isClosed: boolean;
                onHold: boolean;
                referenceNumber: string;
                projectHoldById: number;
                projectEstimate: number;
                ProjectState: {
                    id: number;
                    title: string;
                    slug: string;
                    shouldCloseProject: boolean;
                    order: number;
                    isPublished: boolean;
                    isDeleted: boolean;
                    addedDate: Date;
                    isDefault: boolean;
                    bgColor: string;
                    textColor: string;
                };
                ProjectEnableStates: {
                    id: number;
                    pId: number;
                    pstateId: number;
                }[];
            };
            remarks: string;
            noOfHours: number;
            TaskType: {
                id: number;
                title: string;
                slug: string;
            };
        }[];
    }>;
}
